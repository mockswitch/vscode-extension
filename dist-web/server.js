(()=>{var e={8306:(e,t,s)=>{const r=s(5027),o=s(1231),a=s(5622),n=s(1446),i=s(5712),c=s(9722),p=s(1285).diff,l=s(7415),d=s(822),u=s(621),m=s(2588),g=s(8522),h=s(2522),f=s(5178),v=s(9434),{encrypt:y,decrypt:k}=s(4473);function w(){return process.env}e.exports={debounce:function(e,t){let s=null;return()=>{clearTimeout(s);const r=arguments,o=this;s=setTimeout((()=>{e.apply(o,r)}),t)}},resolve:function(e){return a.resolve(__dirname,e)},throttle:function(e,t,s=this){let r=null,o=null;const a=()=>{e.apply(s,o),r=null};return()=>{r||(o=arguments,r=setTimeout(a,t))}},readFile:function(e){return i.readFileSync(e,{throws:!1})},readAppConfig:w,encryptDecrypt:function(e,t){if(e&&t){const e=k(JSON.parse(t));return e?JSON.parse(e):{}}return`${JSON.stringify(y(JSON.stringify(t)))}`},readToken:function(e,t){c.verify(e,process.env.PY_AUTH_JW_SECRET,((e,s)=>e||(t&&t(s),s)))},bootstrapApp:async function({workspaceId:e,newWorkspaceConfig:t={},user:o},a){let n;const i=t.connector,c=t.mockServer,y=t.environments;if(r.info("[App Bootstrap] - started"),e){global.workspaces||(global.workspaces={}),global.workspaces[e]||(global.workspaces[e]={}),n=global.workspaces[e];try{if(n||(n=global.workspaces[e]),n){if(!n.mockServer){const t=h.getMockServer(e);n.mockServer=t}if(!n.connector){const t=h.getConnector(e);n.connector=t}if(!n.environments){const t=h.getEnvironments(e);if(t)if(o){const s=h.getUserSetttings(o.id);s.activeWorkspaceId||(s.activeWorkspaceId=e,h.saveUserSetttings(o.id,s)),s.activeEnvironment||(s.activeEnvironment=t[0],h.saveUserSetttings(o.id,s));const{activeEnvironment:r}=s;if(r){const s=t.filter((t=>t.environment===r[e]));n.activeEnvironment=s}}else n.activeEnvironment=t[0]}}const k=function(e,t){const s={};let r,o,a,n,i,c,d,u;e&&(o=e.connector,r=e.mockServer,a=e.userSettings,n=e.environments),t&&(c=t.connector,i=t.mockServer,d=t.userSettings,u=t.environments),c||(c={}),i||(i={}),d||(d={}),u||(u={}),u&&(s.environments=p(n,u));const m=p(l(o,Object.keys(c)),c),g=p(l(r,Object.keys(i)),i);if(d){const e=p(l(a,Object.keys(d)),d);s.userSettings=e}return s.connector=m,s.mockServer=g,s}(n,t);if(k.environments&&(r.info("[App Bootstrap] - saving environments"),h.saveEnvironments(e,y),n.environments=y),k.userSettings&&o&&(r.info("[App Bootstrap] - saving user settings"),h.saveUserSetttings(o.id,t.userSettings)),k.mockServer||n.mockServer&&!n.mockServer.store){r.info("[App Bootstrap] - found mockserver changes"),c&&(r.info("[App Bootstrap] - saving new mockserver"),h.saveMockServer(e,c));const t=h.getMockServer(e),s=Object.keys(global.workspaces);for(let e=0;e<s.length;e+=1)f.stopMockServer(global.workspaces[s[e]]);if(n.mockServer=await f.startMockServer(t),n.mockServer.server.workspaceId=e,k&&!k.connector&&n.connector&&n.connector.store&&n.connector.store.getServices)return r.info("[App Bootstrap] - no new connector changes found."),r.info("[App Bootstrap] - complete"),v(n),void a({status:!0,workspaceId:e},n)}if(k.connector&&n.mockServer&&n.mockServer.server||n.connector&&!n.connector.store||!n.connector.store.getServices){r.info("[App Bootstrap] - found connector changes."),r.info("[App Bootstrap] - stopping connector."),f.stopConnector(n),i&&(r.info("[App Bootstrap] - saving new connector."),h.saveConnector(e,i));const t=h.getConnector(e);if(n.connector=t,r.info(`[App Bootstrap] Server started with connector {${t.type}} `,t),r.info("[App Bootstrap] - starting new connector"),"github"===t.type){r.info("[App Bootstrap] - Initializing: Git Connector");const t=new m(e);n.connector.datasource=t,t.initStorage(n,k.connector).then((()=>{r.info("[App Bootstrap] - completed connector boot");const t=new g(n);n.connector.store=t,r.info("[App Bootstrap] - saved global workspace"),r.info("[App Bootstrap] - configure mockserver routes");const s=t.readWorkspaceConnectorData();r.debug("[App Bootstrap] - workspaceConnectorData",s),t.writeWorkspaceConnectorData({workspaceId:e},o),v(n),r.info("[App Bootstrap] - completed"),a({status:!0,workspaceId:e},n)}))}else if("mongo"===t.type){r.info("[App Bootstrap] initializing: MongoAdapter");const t=new(s(3329));n.connector.datasource=t,t.initStorage(n).then((()=>{r.info("[App Bootstrap]: MongoConnectorAdapter"),n.connector.store=s(4092)(n),v(n),a({status:!0,workspaceId:e},n)}))}else if("file"===t.type){r.info("[App Bootstrap] - Initializing: File Connector");const t=new d(e);n.connector.datasource=t,t.initStorage(n,k.connector).then((()=>{r.info("[App Bootstrap] - completed connector boot");const t=new u(n);n.connector.store=t,r.info("[App Bootstrap] - saved global workspace"),r.info("[App Bootstrap] - configure mockserver routes");const s=t.readWorkspaceConnectorData();r.info("[App Bootstrap] - workspaceConnectorData",s),t.writeWorkspaceConnectorData({workspaceId:e},o),v(n),r.info("[App Bootstrap] - completed"),a({status:!0,workspaceId:e},n)}))}}else n&&n.mockServer&&n.mockServer.server&&n.connector&&n.connector.store?a({status:!0,workspaceId:e},n):a({status:!1,workspaceId:e},n)}catch(t){r.error(t),a({status:!1,workspaceId:e,error:t.message,code:t.code},n)}}r.info("[App Bootstrap] - completed")},makeProxyCall:async function(e,t){let s;try{const t=e.body,{method:a,headers:i,timeout:c,params:p,url:l,authDetails:d}=t,u=e.body.requestBody.content.example;let m={...i,"Content-Type":"application/json","User-Agent":"Mockswitch",Accept:"application/json","Cache-Control":"no-cache","x-mockswitch-request-id":o.v4()};if(d&&("bearer"===d.authType&&(m.Authorization=`Bearer ${d.bearer}`),"basic"===d.authType)){const e=`${d.username}:${d.password}`,t=Buffer.from(e).toString("base64");m.Authorization=`Basic ${t}`}if(!l){return{headers:e.headers,data:{error:"Invalid URL"},status:400}}let g=l;r.debug(`ENDPOINT: ${a} ${l} - making proxy...`);const h=a.toLowerCase(),f={};if(p)for(let e=0;e<p.length;e+=1){const t=p[e];"query"===t.type?f[t.key]=t.value:"param"===t.type&&(g=g.replace(`:${t.key}`,t.value))}delete i["content-length"];const v={url:g,method:h,timeout:c,headers:m,params:f};"get"===h||(v.data=u),s=n(v)}catch(e){r.error(e)}return s},getExampleServices:async function(e){const{PY_LICENSE_SERVER:t}=w();if(!global.examples||0===global.examples.length){const s=await n({url:`${t}/api/example/services`,method:"get",timeout:5e3,headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});s.data&&!s.data.error?global.examples=s.data:global.examples=[]}return global.examples},inviteAccountUser:async function(e){const{PY_LICENSE_SERVER:t}=w();return e.body.email,e.body.workspaceId,await n({url:`${t}/api/workspace/users/invite`,method:"post",timeout:5e3,headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}})}}},2522:(e,t,s)=>{const r=s(6535),o=s(5027),a=s(4537),n="userCache",i="workspaceTokenCache",c="connectorCache",p="userSettingsCache",l="mockServerCache",d="variablesCache",u="environmentsCache",m=`${global.appRoot}/.cache`;class g{static getAllCachedMockConnectors(){const e={},t=r.load(c,m).all(),s=r.load(l,m).all(),o=r.load(u,m).all(),a=Object.keys(s);for(let r=0;r<a.length;r+=1){const n=a[r];e[n]={mockServer:s[n],connector:t[n],environments:o[n]}}return e}static getWorkspaceConfig(e){return{mockServer:this.getMockServer(e),connector:this.getConnector(e),environments:this.getEnvironments(e)}}static removeWorkspace(e){this.removeConnector(e),this.removeMockServer(e),this.removeEnvironments(e);const t=this.getAllUsers(),s=Object.keys(t);for(let t=0;t<s.length;t+=1){const r=s[t],a=this.getUser(r);if(a)for(let t=0;t<a.workspaces.length;t+=1){const s=a.workspaces[t];if(s&&s.workspaceId===e){a.workspaces.splice(t,1),o.debug(`[App Bootstrap] removed workspaceId ${e}`),g.saveUser(r,a);break}}}}static clearAllCachedMockConnectors(){return r.clearCacheById(c),r.clearCacheById(l),r.clearCacheById(u),{}}static saveUser(e,t){o.info("[Cache Utils] saveUser");const s=r.load(n,m),a=s.setKey(e,t);return s.save(!0),a}static getAllUsers(){return r.load(n,m).all()}static saveWorkspaceToken(e,t){const s=r.load(i,m),o=s.setKey(e,t);return s.save(!0),o}static removeWorkspaceToken(e){const t=r.load(i,m),s=t.removeKey(e);return t.save(!0),s}static saveVariables(e,t){const s=r.load(d,m),o=s.setKey(`${e}`,t);return s.save(!0),o}static getVariables(e){return r.load(d,m).getKey(e)}static getEnvironments(e){return r.load(u,m).getKey(e)}static getEnvironmentVariables(e,t){const s=r.load(u,m).getKey(e).find((e=>e.environment===t));return s?s.variables:s}static saveEnvironments(e,t){const s=r.load(u,m),o=s.setKey(`${e}`,t);return s.save(!0),o}static removeEnvironments(e){const t=r.load(u,m),s=t.removeKey(e);return t.save(!0),s}static addEnvironment(e,t){const s=r.load(u,m),o=s.getKey(e);if(o){o.find((e=>e.environment===t.environment))||(o.push(t),s.setKey(`${e}`,o),s.save(!0))}return o}static saveMockServer(e,t){let s;t&&(s=JSON.parse(a(t)),delete s.runningPort,delete s.status,delete s.server);const o=r.load(l,m),n=o.setKey(`${e}`,s);return o.save(!0),n}static saveConnector(e,t){let s;t&&(s=JSON.parse(a(t)),delete s.datasource,delete s.metaDb);const o=r.load(c,m),n=o.setKey(`${e}`,s);return o.save(!0),n}static saveWorkspaceLogs(e,t){const s=r.load(p,m),o=s.setKey(`${e}`,t);return s.save(!0),o}static getWorkspaceToken(e){return r.load(i,m).getKey(e)}static getAllWorkspaceToken(){return r.load(i,m).all()}static getConnector(e){return r.load(c,m).getKey(e)}static removeConnector(e){const t=r.load(c,m),s=t.removeKey(e);return t.save(!0),s}static getUserSetttings(e){return r.load(p,m).getKey(e)}static saveUserSetttings(e,t){const s=r.load(p,m),o=s.setKey(`${e}`,t);return s.save(!0),o}static removeUserSetttings(e){const t=r.load(p,m),s=t.removeKey(e);return t.save(!0),s}static getMockServer(e){return r.load(l,m).getKey(e)}static removeMockServer(e){const t=r.load(l,m),s=t.removeKey(e);return t.save(!0),s}static getUser(e){return r.load(n,m).getKey(e)}static removeUser(e){const t=r.load(n,m),s=t.removeKey(e);return t.save(!0),s}}e.exports=g},1574:e=>{e.exports=()=>({MOCK_ENDPOINT_PATH:""})},4473:(e,t,s)=>{const r=s(419),o="vOVH6sdmpNWjRRIqCc7rdxs01lwHzfr3";e.exports={encrypt:e=>r.AES.encrypt(e,o).toString(),decrypt:e=>r.AES.decrypt(e,o).toString(r.enc.Utf8)}},9265:e=>{"use strict";e.exports=JSON.parse('{"id":"adf00709-2de8-4385-9522-3ec421188871","name":"Default User","username":null,"email":null,"workspaces":[{"plan":{"id":"plan_E3ecFz3jZYjJpC","object":"plan","active":true,"aggregate_usage":null,"amount":0,"amount_decimal":"0","billing_scheme":"per_unit","created":1543427958,"currency":"usd","interval":"month","interval_count":1,"livemode":false,"metadata":{"features":"<ul class=\\"list-style-none text-center mb-2 lh-condensed\\">\\n   <li class=\\"mb-1\\">All core features</li>\\n   <li class=\\"mb-1\\">Upto 3 services</li>\\n</ul>","order":"1","free":"true","endpoints":"3","collaborators":"0","connectors":"file"},"nickname":"Free Personal","product":"prod_E37daiBGjnxmku","tiers":null,"tiers_mode":null,"transform_usage":null,"trial_period_days":null,"usage_type":"licensed"},"owner":false,"workspaceId":"03d55454-b583-4867-b0da-89fe61af5f50","workspaceName":"Individual","token":"pyo_5S0IdxZrrbXuX2wRxCttrT6jLv7","permissions":{"users":["read"],"services":["create","read","update","delete"],"workspaces":["create","read","update","delete"]},"roles":["default"],"active":true,"workspaceUsers":[{"id":"31c9b247-a788-48b3-9bbc-58a6b2608715","userId":"adf00709-2de8-4385-9522-3ec421188871","workspaceId":"03d55454-b583-4867-b0da-89fe61af5f50","isOwner":false,"serial":"pyo_5S0IdxZrrbXuX2wRxCttrT6jLv7","createdAt":"2021-09-29T00:46:50.000Z","updatedAt":"2021-09-29T00:46:50.000Z"}]}]}')},4996:e=>{"use strict";e.exports=JSON.parse('{"mockServer":{"host":"localhost","port":"12000","runningPort":"12000","status":"running"},"connector":{"type":"file","host":"localhost","port":"27017"},"environments":[{"environment":"","variables":[{"key":"","value":""}]}],"userSettings":{"darkTheme":false,"activeWorkspaceId":"03d55454-b583-4867-b0da-89fe61af5f50","activeEnvironment":"03d55454-b583-4867-b0da-89fe61af5f50"},"workspaceId":"03d55454-b583-4867-b0da-89fe61af5f50"}')},7837:e=>{"use strict";e.exports=JSON.parse('[{"id":"adf00709-2de8-4385-9522-3ec421188871","display_name":null,"email":"demo@mockswitch.com","name":"Demo User","username":null,"createdAt":"2021-09-29T00:46:50.000Z","updatedAt":"2021-09-29T00:46:50.000Z","roles":["Owner"]}]')},2115:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=async function(e){let t;e&&(t="number"==typeof e.port?[e.port]:e.port);void 0===c&&(c=setInterval((()=>{i.old=i.young,i.young=new Set}),15e3),c.unref&&c.unref());const s=(()=>{const e=o.default.networkInterfaces(),t=new Set([void 0,"0.0.0.0"]);for(const s of Object.values(e))for(const e of s)t.add(e.address);return t})();for(const r of function*(e){e&&(yield*e);yield 0}(t))try{let t=await l({...e,port:r},s);for(;i.old.has(t)||i.young.has(t);){if(0!==r)throw new n(r);t=await l({...e,port:r},s)}return i.young.add(t),t}catch(e){if(!(["EADDRINUSE","EACCES"].includes(e.code)||e instanceof n))throw e}throw new Error("No available ports found")},t.portNumbers=function(e,t){if(!Number.isInteger(e)||!Number.isInteger(t))throw new TypeError("`from` and `to` must be integer numbers");if(e<1024||e>65535)throw new RangeError("`from` must be between 1024 and 65535");if(t<1024||t>65536)throw new RangeError("`to` must be between 1024 and 65536");if(t<e)throw new RangeError("`to` must be greater than or equal to `from`");return function*(e,t){for(let s=e;s<=t;s++)yield s}(e,t)};var r=a(s(1631)),o=a(s(2087));function a(e){return e&&e.__esModule?e:{default:e}}class n extends Error{constructor(e){super(`${e} is locked`)}}const i={old:new Set,young:new Set};let c;const p=e=>new Promise(((t,s)=>{const o=r.default.createServer();o.unref(),o.on("error",s),o.listen(e,(()=>{const{port:e}=o.address();o.close((()=>{t(e)}))}))})),l=async(e,t)=>{if(e.host||0===e.port)return p(e);for(const s of t)try{await p({port:e.port,host:s})}catch(e){if(!["EADDRNOTAVAIL","EINVAL"].includes(e.code))throw e}return e.port}},4190:(e,t,s)=>{const r=s(4537),o=s(5027),{nanoid:a}=s(324),n=s(1508),i=s(7436),{generateServiceGroups:c,getEnvVariableGroups:p}=s(8974);function l(e,t){const s=function(e){const t={};if(t.headers||(t.headers=[]),t.queries||(t.queries=[]),e.header&&e.header.forEach((e=>{t.headers.push(e)})),e.body)try{t.body={},t.requestBody={},e.body[e.body.mode]&&(t.body=JSON.parse(e.body[e.body.mode]),t.requestBody={required:!1,description:"",content:{schema:{},example:JSON.parse(e.body[e.body.mode]),type:""}})}catch(s){o.error(`Failed to import ${e.body[e.body.mode]} - `,s),t.body={error:s.message}}return{request:t}}(t),r=s.request;r.id=`py_tst_${a()}`,r.name=`${e.name}_${e.testCases.length}`,r.method=e.method,r.url=e.endpoint,e.testCases.push(s),e.request.body=r.body,e.request.requestBody=r.requestBody,e.request.paths=r.paths,e.request.headers=r.headers,e.request.queries=r.queries}function d(e,t,s){const{request:o,name:a}=t,c=new RegExp(/[^{{\}}]+(?=}})/,"gm"),p=JSON.parse(r(n));p.method=o.method.toUpperCase();let d=o.url.raw?o.url.raw:o.url;const u=JSON.parse(JSON.stringify(d)),m=d.match(c),g=s.get("environmentVariables"),h=JSON.parse(JSON.stringify(i(d).pathname));let f={};if(d=d.split("{{").join(":").split("}}").join(""),p.endpoint=h.split("{{").join(":").split("}}").join(""),p.defaultProxy=JSON.parse(JSON.stringify(u)),u.indexOf(`${h}/`)>-1&&(p.endpoint+="/"),m&&m.length>0){const e={};m.forEach((t=>{e[t]=""})),g?(f=Object.assign({},g,e),s.set("environmentVariables",f)):s.set("environmentVariables",e)}const v=e?e.name:t.name;if(p.tags.push(v),p.active=!0,p.name=a,p.request={},p.testCases=[],p.rules=[],p.validator={responses:{respType:"static",svcCode:"s200",userDataPath:"",description:"",content:{schema:"",example:"",type:""},headers:[]}},s.get(p.endpoint)){const e=s.get(p.endpoint);l(p,o),s.set(e.endpoint,e)}else{const e=function(e,t,s){const r={id:"default",defaultRule:!0,name:"Default",active:!0,method:"",primaryKey:"",stateful:!1,statefulId:"",rule:{},postTransform:{},preTransform:{body:{required:!1,description:"",content:{schema:"",example:"",type:""}},headers:[{key:"Content-Type",value:"application/json",active:!0}],paths:[],queries:[]},responses:{respType:"merge",svcCode:"s200",userDataPath:"",description:"",type:"",body:{},merge:[{endpoint:s,method:t.method.toUpperCase(),timeout:null}],headers:[{description:"",type:"",format:"",enums:"",example:""}]},transType:"merge"};return e?r.defaultRule=!0:(r.id=Math.random().toString(36).slice(-5),delete r.defaultRule),r.active=!0,r}(!0,o,d);l(p,o),p.rules.push(e),s.set(p.endpoint,p)}}function u(e,t,s){t&&t.item&&Array.isArray(t.item)?t.item.forEach((e=>{u(t,e,s)})):d(e,t,s)}function m(e){const t=new Map;let s={},r={};u(null,e,t);const o=t.get("environmentVariables");if(o&&(r=JSON.parse(JSON.stringify(o)),t.delete("environmentVariables")),t.values){const o=[];for(let e of t.values())o.push(e);s={services:o,environment:{environment:e.info.name,variables:Object.assign({},e.variable,r)}}}else s={services:t,environment:{environment:e.info.name,variables:cObject.assign({},e.variable,r)}};const a=c(e,"postman");s.serviceGroups=a;const n=p(s.services,s.environment.variables);return s.variableGroups=n,s}e.exports=async function(e){if(e.item)return m(e);throw new Error}},8974:(e,t,s)=>{const{nanoid:r}=s(324);function o(){return{name:"",id:`py_grp_${r()}`,filter:[],children:[],filterOperator:"any"}}function a(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function n(e,t){let s=!1,r="";if(e&&t)if(s=new RegExp(e).test(t),s)r=e;else{const s=e.slice(0,e.lastIndexOf("/"));s&&(r=n(s,t))}return r}function i(e,t){if(e&&e.length>0){t.children=[],t.filter=[];const s=[];for(let r=0;r<e.length;r+=1){const a=e[r];let n=o();if(a.item&&a.item.length>0)n.name=a.name,n=i(a.item,n),t.children.push(n);else if(a.request&&a.response&&a.request.url){let e="";"object"==typeof a.request.url?a.request.url.path?e=`/${a.request.url.path.join("/")}`:a.request.url.raw&&(e=a.request.url.raw.replace("://",""),e=e.slice(e.indexOf("/"))):(e=a.request.url.replace("://",""),e=e.slice(e.indexOf("/"))),s.push(e)}}if(s.length>0){let e=!1;const r=s[0],o=s[1];if(r&&o){const s=n(r,o);if(s){e=!0,t.filterOperator="all";const r={key:"endpoint",operator:"contains",value:`${a(s)}`};t.filter.push(r)}}if(!e){let e="";t.filterOperator="any",s.forEach(((r,o)=>{const n=a(r);if(-1===e.indexOf(n)){e+=`(${n})`,o<s.length-1&&(e+="|");const r={key:"endpoint",operator:"matches",value:`${n}`};t.filter.push(r)}}))}}}return t}e.exports={generateServiceGroups:function(e,t){let s=[];if(e&&t)if("postman"===t){let t=o();const{info:r,item:a}=e;r&&r.name&&(t.name=r.name),a&&(t=i(JSON.parse(JSON.stringify(a)),t)),s.push(t)}else if("openapi"===t)for(let t=0;t<e.tags.length;t+=1){const r=e.tags[t],a=o();a.name=r.name,a.filter=[{key:"tags",operator:"contains",value:a.name}],s.push(a)}return s},getEnvVariableGroups:function(e,t){const s={},r=[],o=[],a=Object.keys(t);if(e&&e.length>0&&a&&a.length>0){for(let t=0;t<a.length;t+=1){const o=a[t];s[o]||(s[o]=[]),e.forEach((e=>{let t="",r=`${o}`;e.defaultProxy?(t=e.defaultProxy,r=`{${o}}`):e.endpoint&&(t=e.endpoint,r=`:${o}`),t&&t.indexOf(r)>-1&&s[o].push(e)})),s[o].length===e.length&&(r.push(o),delete s[o])}const t=Object.keys(s);if(t.length>0)for(let e=0;e<t.length;e+=1){const a=s[t[e]],n={variables:[...r,t[e]],services:a};o.push(n)}else if(r.length>0){const t={variables:[...r],services:e};o.push(t)}}return o}}},7567:(e,t,s)=>{const r=s(4537),o=(s(8118),s(4766)),a=(s(5027),s(1508)),{generateServiceGroups:n,getEnvVariableGroups:i}=(s(3286),s(8974));e.exports=async function(e){let t=await o.validate(e);t=await o.dereference(JSON.parse(r(t)));const{services:s,environmentVariables:c}=function(e){const t=[];let s={};return e.paths&&Object.keys(e.paths).forEach((o=>{const n=e.paths[o],i=[],c=new RegExp(/[^{\}}]+(?=})/,"gm"),p=o.match(c),l=JSON.parse(JSON.stringify(o));Object.keys(n).forEach((e=>{["get","post","put","delete","patch"].includes(e.toLowerCase())&&i.push(e)})),i.forEach((e=>{const i=n[e],c=i.responses,d=i.parameters,u=JSON.parse(r(a));if(u.method=e.toUpperCase(),u.defaultProxy=JSON.parse(JSON.stringify(l)),o=o.split("{").join(":").split("}").join(""),u.tags=i.tags,u.endpoint=o,u.description=i.description,u.active=!0,u.name=i.summary||i.operationId,u.request={},u.rules=[],p&&p.length>0){const e={};p.forEach((t=>{e[t]=""})),s=Object.assign({},s,e)}if(Object.keys(c).forEach((e=>{const t=c[e],s={active:!0,responses:{}};s.responses.respType="static",s.responses.svcCode=`s${e}`,t.schema?(delete t.schema.xml,s.responses.respType="faker",t.schema.$schema||(t.schema.$schema="http://json-schema.org/draft-04/schema#"),s.responses.body=t.schema):t&&t.body?s.responses.body=JSON.parse(t.body):t&&t.examples&&Object.keys(t.examples).length?s.responses.body=JSON.parse(t.examples[Object.keys(t.examples)[0]]):t&&t.description&&(s.responses.body={description:t.description}),0===u.rules.length?(s.defaultRule=!0,s.name="Default"):s.name=`Response ${u.rules.length}`,u.rules.unshift(s)})),d){const e=u.request;d.forEach((t=>{if("body"===t.in){e[t.in]||(e[t.in]={});let s=e[t.in];s.description=t.description,s.required=t.required,t.schema&&(s.schema=t.schema),s.schema||(s.schema={},s.schema.type=t.type,s.schema.items=t.items)}else{if(e.headers||(e.headers=[]),e.queries||(e.queries=[]),e.paths||(e.paths=[]),"header"===t.in){const s={};s.name=t.name,s.type=t.type,s.required=t.required,s.description=t.description,e.headers.push(s)}if("query"===t.in){const s={};s.name=t.name,s.type=s.type,s.required=t.required,s.description=t.description,e.queries.push(s)}if("path"===t.in){const s={};s.name=t.name,s.type=t.type,s.required=t.required,s.description=t.description,e.paths.push(s)}}}))}t.push(u)}))})),{services:t,environmentVariables:s}}(t),p={environment:e.info.title,variables:JSON.parse(JSON.stringify(c))};return{services:s,serviceGroups:n(e,"openapi"),variableGroups:i(s,c),environment:p}}},4925:(e,t,s)=>{const r=s(5027),o=s(4298),a=s(5622),n=s(3498),i=s(54),c=s(3098),p=s(2927),l=a.join(c,".mockswitch");r.info(`Logs: ${l}`),global.appRoot=l,o.ensureDirSync(l),r.transports.file.resolvePath=()=>a.join(l,"logs/main.log");const d=s(2115),u=s(2127),m=s(358),g=s(2804);s(334).config({path:a.join(p.toString(),"./dist/.env")});const{initWorkspaces:h,initBasicServices:f}=s(6978),{initEditorServices:v}=s(9380),y=s(8306),k=s(7326),w=s(5178),{PY_APP_SERVER_PORT:b}=y.readAppConfig();async function S(e,t){let s=b;t&&(s=t);let o=Number(process.env.PORT_PUBLIC)||process.env.PORT||s;global.appPort=await d.default({port:d.portNumbers(parseInt(o),parseInt(o)+100)}),o=global.appPort,e.instance=e.listen(o,"0.0.0.0",(async()=>(e.port=o,r.info(`[App Bootstrap] Main Server started at ${global.appPort} - pid ${process.pid}`),h(),f(e),v(e),setTimeout((()=>{global.expressApp.emit("main-init",global.appPort)}),500),global.expressApp.on("stop-server",(()=>{const t=global.workspaces;if(t)for(let e=0;e<t.length;e+=1){const s=t[e];s&&(r.info(`[App Bootstrap] Stopping workspace: ${s.mockServer} `),w.stopMockServer(s),w.stopConnector(s))}e.metaDb&&e.metaDb.connection&&(e.metaDb.connection.close(),r.error("[App Bootstrap] connection close.........")),r.info(`[App Bootstrap] server stopped at ${o}`),process.exit(0)})),o))).on("error",(async s=>{if(r.error(`[App Bootstrap] EADDRINUSE at ${o} - pid ${process.pid}`,s),"EADDRINUSE"===s.code){let t=await d.getPort({port:d.portNumbers(1025,1125)});return global.appPort=t[0],S(e,global.appPort)}e.on("unhandledRejection",(e=>r.error(`Caught unhandledRejection: ${e.stack}`))),e.on("uncaughtException",(e=>r.error(`Caught uncaughtException: ${e.stack}`))),process.on("SIGTERM",(()=>{r.info(`[App Bootstrap] SIGTERM ${t}`),e.close((()=>{const s=global.workspaces;if(s)for(let e=0;e<s.length;e+=1){const t=s[e];t&&(r.info(`[App Bootstrap] Stopping workspace: ${t.mockServer} `),w.stopMockServer(t),w.stopConnector(t))}e.metaDb&&e.metaDb.connection&&(e.metaDb.connection.close(),r.error("[App Bootstrap] connection close.........")),r.info(`[App Bootstrap] server stopped at ${t}`),process.exit(0)}))}))}))}e.exports=function(){let e=u();e=global.expressApp?global.expressApp:u(),r.info(`[App Bootstrap] Path : ${p.toString()}`),e.use(n()),e.use("/",i(a.join(p.toString(),"/dist"),{enableBrotli:!0,customCompressions:[{encodingName:"deflate",fileExtension:"zz"}],orderPreference:["br"]}));let t=a.join(p.toString(),"/dist/index.html.gz");return e.get(["/","/app/*"],((e,s)=>{r.info(`[App Bootstrap] Path fileNamex: ${t} ${p}`),s.sendFile(t,{},(e=>{e&&(r.error("[App Bootstrap] Error sending file",e),s.status(e.status).end())}))})),e.use("/*",m()),e.use(u.json({limit:"50mb"})),e.use(u.urlencoded({extended:!1})),e.use(g.defaults({static:y.resolve("../dist")})),e.use(g.defaults({static:y.resolve("../")})),e.use(k),e.use(n()),e.enable("trust proxy"),S(e),global.expressApp=e,e}()},1446:(e,t,s)=>{const r=s(2376),o=s(7211),a=r.create({withCredentials:!0,crossdomain:!0,httpsAgent:new o.Agent({rejectUnauthorized:!1})}),n=r.CancelToken;e.exports=async function(e){const{timeout:t}=e;let s;return t&&(e.cancelToken=new n((e=>s=e)),setTimeout((()=>{s("timeout cancel",{timeout:t})}),t)),await a(e)}},7326:(e,t,s)=>{const r=s(9722),o=s(7211),a=s(2376),n=s(5027),i=s(4537),c=s(9265),p=s(2522),l=a.create({withCredentials:!0,crossdomain:!0,httpsAgent:new o.Agent({rejectUnauthorized:!1})});l.interceptors.request.use((e=>(n.debug("Request",i(e,null,2)),e))),l.interceptors.response.use((e=>(n.debug("Response:",i(e,null,2)),e))),e.exports=function(e,t,s){const o=e.cookies?e.cookies["x-auth-token"]:"",a=e.originalUrl;let i;o&&a&&a.startsWith("/meta")&&!a.startsWith("/meta/app/config")?r.verify(o,process.env.PY_AUTH_JW_SECRET,(async(r,o)=>{if(r||!o)return t.json({success:!1,message:"Token is not valid"});try{const r=p.getUserSetttings(o.userId);if(i=p.getUser(o.userId),!i){const a=await l.get(`${process.env.PY_LICENSE_SERVER}/api/user/profile`,{headers:{"x-auth-token":e.cookies["x-auth-token"],"Content-Type":"application/json"}});i=a.data,p.saveUser(o.userId,i);for(let e=0;e<i.workspaces.length;e+=1){const t=i.workspaces[e];p.saveWorkspaceToken(t.workspaceId,t.token)}return i.userSettings=r,t.locals.user=i||c,s()}i.workspaces.length>0?t.locals.user=i:(t.removeHeader("x-auth-token"),t.cookie("x-auth-token","",{expires:new Date(0)}),t.locals.user=c)}catch(e){n.error(e)}return t.locals.user?t.locals.user=i:t.locals.user=c,s()})):(o||!a||!a.startsWith("/meta")||a.startsWith("/meta/app/config")||t.locals.user||(t.locals.user=c,p.saveUser(c.id,c)),s())}},8724:(e,t,s)=>{const r=s(7551),o=s(7211),a=s(5027),n=s(5047),i=s(3268),c=(s(8038),s(2376).create({withCredentials:!0,crossdomain:!0,httpsAgent:new o.Agent({rejectUnauthorized:!1})}));function p(e){return n.parse(n.stringify(e,null,2))}function l(e,t){return new Promise((s=>setTimeout(s,e,t)))}function d(e,t,s){const r={};let o=!1;for(let e=0;e<t.length;e++)e%2==0?r[t[e]]="":r[t[e-1]]=t[e];if(e)for(let t=0;t<e.length;t++){const n=e[t];if(n.key&&n.key.length>0){"accept-language"!==n.key&&"Accept-Language"!==n.key||(o=!0);const e=n.value.substring(1,n.value.length);if(n.value&&s[e]&&(n.value=s[e]),n.value&&s[e.toLowerCase()]&&(n.value=s[e.toLowerCase()]),n.value)for(let e=0;e<Object.keys(r).length;e++){const t=Object.keys(r)[e],s=r[t];t&&s&&-1!==n.value.toLowerCase().indexOf(t.toLowerCase())&&(a.debug("[RESP_EXEC] value:before",n.key,n.value),n.value=n.value.replaceAll(`{{${t}}}`,s),a.debug("[RESP_EXEC] value",n.value))}const t=n.value.replaceAll("'",'"');r[n.key]=t}}return o||(delete r["accept-language"],delete r["Accept-Language"]),r}function u(e,t,s){let r=Object.assign({},t,p(e.params));r=Object.assign({},r,p(e.headers));let o=s;for(let e=0;e<Object.keys(r).length;e+=1){const t=Object.keys(r)[e];if(t.length>0){const e=`:${t}`;o=o.trim().replace(new RegExp(e,"gi"),r[t])}}return o}async function m(e,t,s,r,{endpoint:o,method:n,timeout:i}){let m;try{let t=o,n=Object.assign({},r,p(e.params));n=Object.assign({},p(e.headers),p(e.params)),n=Object.assign({},n,p(e.query)),t=u(e,r,t),a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${t} - making proxy...`);const g=s.request.headers,h=s.method.toLowerCase(),f={headers:d(g,e.rawHeaders,r)};delete f.headers["accept-encoding"],delete f.headers.origin,delete f.headers.pragma,delete f.headers.referer,delete f.headers["content-length"],delete f.headers.connection,f.headers["content-type"]="application/json";const v=new URL(t);a.debug(`[RESP_EXEC] Hostname ${v.hostname}`),a.debug(`[RESP_EXEC] Endpoint ${t}`),a.debug(`[RESP_EXEC] Headers ${JSON.stringify(f.headers,null,2)}`),a.debug(`[RESP_EXEC] Body ${JSON.stringify(e.body,null,2)}`),f.headers.host=v.hostname,Object.keys(e.query).length>0&&(f.params=e.query),f.headers.accept&&-1!==f.headers.accept.indexOf("application/octet-stream")&&(f.responseType="arraybuffer"),m="get"===h?c[h](t,f).then((e=>l(i,e))):c[h](t,e.body,f).then((e=>l(i,e)))}catch(t){if(a.error(`[RESP_EXEC] ENDPOINT: Proxy ${e.method} ${e.originalUrl} - error = ${t}`),!m)throw a.error(t),new Error(JSON.stringify({code:"ERR.501",message:t.message}));m.reject(t.data)}return m}async function g(e,t,s,r,o){const a=[];if(e)for(let s=0;s<e.length;s+=1){const n=e[s];a.push(m(t,0,r,o,n))}return Promise.all(a)}c.interceptors.request.use((e=>(a.debug("[RESP_EXEC] Starting Request",e),e))),c.interceptors.response.use((e=>(a.debug("[RESP_EXEC] Response:",e),e))),String.prototype.replaceAll=function(e,t){var s=e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),r=new RegExp(s,"ig");return this.replace(r,t)},e.exports=async function(e,t,s){try{const o=t.app;let n=!0;t.set("X-Powered-By","Mockswitch"),t.header("Content-Type","application/json");const{environment:c,service:l}=t.locals;l&&!l.redirected?l.rules&&l.rules.length>0&&(a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - evaluating rules...`),n=await async function(e,t,s,o,n){const c={params:{}};c.query=p(e.query),c.header=p(e.headers),c.body=p(e.body),c.json=p(e.body),c.ip=p(e.ip),c.method=p(e.method),t.locals.ruleParams&&(c.params=p(t.locals.ruleParams)),e.cookies&&(c.cookies=p(e.cookies)),c.protocol=p(e.protocol);for(let p=0;p<s.rules.length;p+=1){const l=s.rules[p];if(l.active){let p=l.responses.svcCode;p||(p="s200");const d=l.responses.body;let m=!1;if(!l.rule||l.rule&&0===Object.keys(l.rule).length)m=!0;else{const t=l.rule.all?l.rule.all:l.rule.any;for(let s=0;s<t.length;s+=1){const r=t[s];r.value=u(e,n,r.value)}m=await i.evaluate(l.rule,c,d)}if(m){const i=p.substring(1,p.length);if(a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - rule  = ${l.name}`),t.locals.rule=l,l.postTransform&&Object.keys(l.postTransform).length>0&&(t.locals.transformObj={fact:c,ruleObj:l}),"default"===l.responses.respType)return!0;if("merge"===l.responses.respType){try{const r=await g(l.responses.merge,e,0,s,n);let o;for(let e=0;e<r.length;e++){const t=r[e];0===e&&(o=t&&Array.isArray(t.data)?[]:{}),t&&Array.isArray(t.data)?o=o.concat(t.data):t&&Object.assign(o,t.data)}a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - rule merge response = ${o}`),t.status(i).send(o)}catch(s){a.error(s),s.response&&s.response.data?(a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - rule merge response = ${s.response.data}`),t.status(s.response.status).send(s.response.data)):t.status(500).send(s.message)}return!1}if(l.stateful){const r=s.endpoint.split("/"),a=r[r.length-1].replace(":","_");let n;const i=s._endpoint.split("/").filter((e=>""!==e)),c=i.indexOf(s.method.toLowerCase());if(i[c]=`${i[c]}/${l.id}`,i[i.length-1]!==a){const e=i.pop();n=`/${i.join("/")}/${a}/${e}`}else n=`/${i.join("/")}/${a}`;const p=JSON.parse(JSON.stringify(s));p._endpoint=n,e.url=n,t.locals.service=p,o.handle(e,t)}else if("faker"!==l.responses.respType)a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - static rule response`),d?t.status(i).send(d):t.status(i).send({});else{a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - faker rule response`);let s=l.responses.body;try{s="string"==typeof l.responses.body?r.generate(JSON.parse(l.responses.body)):r.generate(l.responses.body)}catch(e){}t.status(i).send(s)}return!1}}}return!0}(e,t,l,o,c),a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - default response ? `,n),n&&async function(e,t,s,o){const n=s.responses.svcCode.substring(1,s.responses.svcCode.length);let i={};"faker"===s.responses.respType?"get"!==s.method.toLowerCase()?(i=await r.resolve(s.responses.body),a.debug(`[RESP_EXEC] ENDPOINT: Faker ${e.method} ${e.originalUrl} - result = ${i}`),t.status(n).send(i)):o():(a.debug(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - responding with static response...`),i=s.responses.body,a.debug(`[RESP_EXEC] ENDPOINT:Static ${e.method} ${e.originalUrl} - result = ${i}`),t.status(n).send(i))}(e,t,l,s)):s()}catch(s){a.debug(s),a.error(`[RESP_EXEC] ENDPOINT: ${e.method} ${e.originalUrl} - error = ${s}`),t.status(500).end(`Server Error - [${s.message}]`)}}},6330:(e,t,s)=>{const r=s(8351),{postOutput:o}=s(5804);e.exports=r.json((function(e,t,s){let r=e;return t.originalUrl.match("^/meta")||(r=o(t,s,e)),r}))},6002:(e,t,s)=>{const r=s(5027);function o(e,t){e&&t()}const a=s(1888).validate;e.exports=async function(e,t,s){try{t.locals.requestStartTime=Date.now();const n=e.app,{connector:{store:i},variables:c,activeEnvironment:p}=global.workspaces[n.workspaceId];let l=c?c.reduce(((e,t)=>(e[t.key]=t.value,e)),{}):{};if(p){const e=p.variables;l=e?e.reduce(((e,t)=>(e[t.key]=t.value,e)),{}):{}}r.debug(`REQUEST: ${e.method} ${e.path}`);let d=!0;if(n.recheck&&(r.debug("App recheck"),await i.forceRead(),n.recheck=!1),n.retry&&!n.retryInProgress&&(n.retryInProgress=!0,r.debug("Retrying to connect to datasource..."),await i.reconnect(),n.retryInProgress=!1),t.locals.service)t.locals.service.redirected=!0,o(d,s);else if(-1!==["/__webpack_hmr","/__health"].indexOf(e.path)||e.originalUrl.match("^/meta"))o(d,s);else{const n=await i.getServiceByEndpoint(e.path,e.method,t);if(r.info(`[Response Pre] ENDPOINT: ${e.method} ${e.originalUrl}`),t.locals.service=n,t.locals.environment=l,n){if(!n.active)return void t.status(404).end("Service inactive");let i=n.vRules;if(i.default=!0,i||(i={},i.request=!0,i.default=!0,i.rules=!1,i.proxy=!1),i.request){let s;if(n.request&&n.request.headers&&(s=n.request.headers),s&&s.forEach((s=>{let r=s.key;r&&(r=r.toLowerCase());const o=e.headers[r];s.required&&(void 0===e.headers[r]||void 0===s.value?n.responses.s400||(t.status(400).end(`Invalid Request: ${s.key} header missing`),d=!1):s.value.match(o)||(t.status(400).end(`Invalid Request: ${s.key} value mismatch ${s.value}`),d=!1))})),e.body&&n.request){const s=n.request.body;if(s&&s.faker){let r=s.faker;"string"==typeof s.faker&&(r=JSON.parse(s.faker));const o=a(e.body,r);o.valid||(n.responses.s400?n.responses.svcCode="s400":(t.status(400).end(`Invalid Request: ${o.errors} `),d=!1))}}}r.debug(`Service Endpoint: ${e.method}, ${n._endpoint}`),n.delay?setTimeout((()=>{n._endpoint&&(e.url=n._endpoint),o(d,s)}),parseInt(n.delay)):(n._endpoint&&(e.url=n._endpoint),o(d,s))}else r.debug(`Service not found: ${e.method}, ${e.originalUrl}`),t.status(404).send({code:"ERR.404",message:"Service Not Found"}),d=!1}}catch(e){r.error("Internal Server Error:",e),t.status(500).end(` Server Error - ${e.message}`)}}},5178:(e,t,s)=>{const r=s(4298),o=(s(504).default,s(6710),s(7211)),a=s(1764),n=s(5622),i=s(2127),c=s(3242),p=s(479),l=s(3498),d=s(5027),u=s(8633),m=s(4537),g=s(2115),h=s(6002),f=s(6330),v=s(7326);function y(e){e.use(i.json()),e.use(i.urlencoded({extended:!0}))}function k(e){e.use(v),e.use(h),e.use(f)}function w(e){e.use(p({credentials:!0,origin:!0})),e.use(l({setTo:"Mockswitch"}))}e.exports={startMockServer:function(e){return new Promise((async(t,s)=>{let p;const l=JSON.parse(m(e));try{if(e&&"running"===e.status&&e.runningPort===parseInt(e.port,10))return void t(e);const d=i(),m=e.port;if(y(d,u()),w(d),k(d),e.useSSL){const i=o.createServer({key:r.readFileSync(n.resolve(__dirname,"./certificates/localhost-key.pem")),cert:r.readFileSync(n.resolve(__dirname,"./certificates/localhost.pem"))},d);p=i.listen(m,(async()=>{!0===p.listening&&(l.server=d,l.server.instance=p,l.runningPort=m,l.status="running",l.startedAt=new Date,void 0===l.serviceLog&&(l.serviceLog=[])),l.server.searchIndex=new c({ignore_case:!0,index_amount:2}),a(p),t(l)})).on("error",(async r=>{const o=await g.default({port:g.portNumbers(parseInt(m),parseInt(m)+100)});e.port=o,p=i.listen(o,(async()=>{!0===p.listening&&(l.server=d,l.server.instance=p,l.runningPort=o,l.status="running",l.startedAt=new Date,void 0===l.serviceLog&&(l.serviceLog=[])),l.server.searchIndex=new c({ignore_case:!0,index_amount:2}),a(p),t(l)})).on("error",(e=>{s(e)}))}))}else p=d.listen(m,(async()=>{!0===p.listening&&(l.server=d,l.server.instance=p,l.runningPort=m,l.status="running",l.startedAt=new Date,void 0===l.serviceLog&&(l.serviceLog=[])),a(p),l.server.searchIndex=new c({ignore_case:!0,index_amount:2}),t(l)})).on("error",(async()=>{const e=await g.default({port:g.portNumbers(parseInt(m),parseInt(m)+100)});p=d.listen(e,(async()=>{!0===p.listening&&(l.server=d,l.server.instance=p,l.runningPort=e,l.status="running",l.startedAt=new Date,void 0===l.serviceLog&&(l.serviceLog=[])),l.server.searchIndex=new c({ignore_case:!0,index_amount:2}),t(l)})).on("error",(e=>{s(e)}))})),a(p)}catch(e){d.debug(e),s(e)}}))},stopMockServer:async function({mockServer:e}){if(e&&e.server){const t=e.server.instance;t&&t.kill((()=>{e.server=null,d.debug("Instance stopped"),d.info(`[Mock Server] Stopped  mockServer instance - ${e.runningPort}`)})),e.status="stop",e.runningPort=null,e.startedAt=null}},stopConnector:async function({connector:e}){e&&(d.info("[Mock Server] stopConnector store"),e.store=null,e.metaDb&&e.metaDb.connection&&(e.metaDb.connection.close(),d.info("[Mock Server] stopConnector metaDb")))},jsonServer:function(e){const t=s(2804);e.use(t.defaults({static:n.resolve(__dirname,"../")}))},responseMiddleware:k,removeMiddleware:function(e){const t=e._router.stack;for(let e=0;e<t.length;e+=1){const s=t[e];!s.regexp||"responsePre"!==s.name&&"responsePost"!==s.name||d.debug(t.splice(e,1))}},setRoutes:function(e,t){const s=i.Router(),r=t.prefix;this.setPrefix(e,s,r)},setCors:w,setPrefix:function(e,t,s){e.use(`/${s}`,t)},parseBody:y}},2499:e=>{e.exports=class{constructor(e,t,s){this.host=e,this.userName=t,this.type=s}}},2554:(e,t,s)=>{let{Schema:r}=s(5619);const{String:o,Array:a}=r.Types;let n={workspaceId:o,userId:o,dataTypes:[{name:o,id:o,description:o,schema:o,example:o}]};e.exports=n},1051:(e,t,s)=>{const r=s(2499);e.exports=class extends r{constructor(e,t,s){super(e,t,"git"),this.accessToken=s}}},1703:e=>{e.exports=class{constructor(e,t,s,r,o,a){this.host=e,this.port=t,this.useSSL=s,this.status=r,this.runningPort=o,this.server=a}}},8441:(e,t,s)=>{let{Schema:r}=s(5619);const{String:o,Array:a}=r.Types;let n={workspaceId:o,userId:o,serviceGroups:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a,children:[{name:o,id:o,filter:a}]}]}]}]}]}]}]};e.exports=n},3150:(e,t,s)=>{let{Schema:r}=s(5619);const{String:o,Number:a,Array:n,Boolean:i}=r.Types,c={method:o,id:o,name:o,description:o,modifiedEmail:o,modifiedBy:o,active:i,delay:a,endpoint:o,group:o,state:o,validator:{response:{description:o,respType:o,svcCode:o,userDataPath:o,body:{},type:{type:o},headers:[{description:o,type:{type:o},format:o,enums:o,example:o}]}},request:{requestBody:{required:i,description:o,content:{schema:o,example:o,type:{type:o}}},paths:[{required:i,name:o,description:o,type:{type:o},format:o,enums:o,example:o}],queries:[{required:i,name:o,description:o,type:{type:o},format:o,enums:o,example:o}],headers:[{required:i,name:o,description:o,type:{type:o},format:o,enums:o,example:o}]},testCases:[{id:o,name:o,description:o,method:o,url:o,requestBody:{description:o,content:{schema:o,example:o,type:{type:o}}},paths:[{name:o,description:o,type:{type:o},format:o,enums:o,example:o}],queries:[{name:o,description:o,type:{type:o},format:o,enums:o,example:o}],headers:[{name:o,description:o,type:{type:o},format:o,enums:o,example:o}]}],vRules:{request:i,default:i,rules:i,proxy:i,static:i},rules:[{id:o,defaultRule:i,name:o,active:i,method:o,primaryKey:o,statefulId:o,stateful:i,rule:{},preTransform:{body:{required:i,schema:{},faker:{}},headers:[{key:o,value:o,active:i}],paths:n,queries:n},postTransform:{},responses:{description:o,respType:o,svcCode:o,userDataPath:o,body:{},type:{type:o},merge:[],headers:[{description:o,type:{type:o},format:o,enums:o,example:o}]},transType:o}],tags:n,references:n,pairings:{static:{path:o,fileName:o,originalName:o,rows:a,samples:n}}};e.exports=c},1508:e=>{"use strict";e.exports=JSON.parse('{"method":"GET","id":"new","tags":[],"name":"","active":true,"delay":null,"endpoint":"","state":"","testCases":[{"id":"","name":"","description":"","method":"","url":"","queries":[{"name":"","description":"","type":"","format":"","enums":"","example":""}],"headers":[{"name":"","description":"","type":"","format":"","enums":"","example":""}],"requestBody":{"description":"","content":{"schema":"","example":"","type":""}}}],"request":{"requestBody":{"required":false,"description":"","content":{"schema":"","example":"","type":""}},"paths":[{"required":false,"name":"","description":"","type":"","format":"","enums":"","example":""}],"queries":[{"required":false,"name":"","description":"","type":"","format":"","enums":"","example":""}],"headers":[{"required":false,"name":"","description":"","type":"","format":"","enums":"","example":""}]},"validator":{"response":{"respType":"static","svcCode":"s200","userDataPath":"","description":"","content":{"schema":"","example":"","type":""},"headers":[{"description":"","type":"","format":"","enums":"","example":""}]}},"vRules":{"request":false,"default":true,"rules":true,"proxy":false,"static":false},"rules":[{"id":"default","defaultRule":true,"name":"Default","active":true,"method":"","primaryKey":"","stateful":false,"statefulId":"","rule":{},"postTransform":{},"preTransform":{"body":{"required":false,"description":"","content":{"schema":"","example":"","type":""}},"headers":[{"key":"Content-Type","value":"application/json","active":true}],"paths":[],"queries":[]},"responses":{"respType":"static","svcCode":"s200","userDataPath":"","description":"","type":"","body":{},"headers":[{"description":"","type":"","format":"","enums":"","example":""}]},"transType":"merge"}],"references":[],"pairings":{"static":{"path":"","fileName":"","originalName":"","rows":-1,"samples":[]}}}')},1180:e=>{e.exports=class{constructor(e,t){this.theme=e,this.defaultWorkspaceId=t}}},3268:(e,t,s)=>{const{Engine:r,Rule:o}=s(2979),a=s(9191),n=s(5027),i=new r([],{allowUndefinedFacts:!0});i.addOperator("exists",((e,t)=>void 0!==e&&(!(e.length<1)&&"true"===t))),i.addOperator("match-json",((e,t)=>void 0!==e&&a(e,t))),i.addOperator("not",((e,t)=>void 0!==e&&!a(e,t))),i.addOperator("regex",((e,t)=>new RegExp(t).test(e))),i.addOperator("startsWith",((e,t)=>!!e&&(!!e.length&&0===e.indexOf(t)))),i.addOperator("containString",((e,t)=>!!e&&(!!e.length&&e.includes(t)))),e.exports={evaluate:async(e,t,s)=>{let r;try{if(e){const a=new o({conditions:e,event:{type:"match"}});if(i.addRule(a),r=await i.run(t),i.removeRule(a),r.length>0)return s}}catch(e){throw i.removeRule(rule),n.error("[RULES]",e),new Error(e)}return null}}},6563:(e,t,s)=>{const r=s(8118),o=s(7551),a=s(9922),n=s(5027),i=s(7472),c=s(5698),p=s(1574)(),l=s(8724),{postOutput:d}=s(5804);o.option({fixedProbabilities:!0,optionalsProbability:1,alwaysFakeOptionals:!0,failOnInvalidTypes:!1}),e.exports={processServiceGroups(e){if(Array.isArray(e))for(let t=0;t<e.length;t+=1){const s=e[t];this.processServiceGroups(s)}else if(e&&e.children&&e.children.length>0)for(let t=0;t<e.children.length;t+=1){const s=e.children[t];e.children[t]=this.processServiceGroups(s),e.children[t]&&e.children[t].service&&e.children.splice(t,1)}return e},processServiceObject(e){for(let t=0;t<e.rules.length;t+=1){const t=e.rules[0];!t.responses||"faker"!==t.responses.respType||t.responses.body.type||t.responses.body.properties||"string"==typeof t.responses.body||(t.responses.body=JSON.stringify(r(t.responses.body)))}return e},postProcessServiceObject(e){for(let t=0;t<e.rules.length;t+=1){const t=e.rules[0];t.responses&&"string"==typeof t.responses.body&&(t.responses.body=JSON.parse(t.responses.body))}return e},generateInternalEndpoint(e){let t="";if(e&&e.endpoint){const s=e.method.toLowerCase();t=`${p.MOCK_ENDPOINT_PATH}/${e.id}/${s}${e.endpoint}`}return`${t}`},generateServiceEndpoint({server:e},t){let s;try{s=JSON.parse(JSON.stringify(t)),this.removeRouteById(e,s.id);const r=new i({windowMs:18144e5,max:1e5,headers:!0,delayMs:0,delayAfter:0});if(s.active){const t=s.endpoint.split("/"),i=t[t.length-1].replace(":","_"),c=s.method.toLowerCase(),u=`${p.MOCK_ENDPOINT_PATH}/${s.id}/${c}${s.endpoint}`;if(s._endpoint=this.generateInternalEndpoint(s),s.rules&&s.rules.length>0)for(let t=0;t<s.rules.length;t+=1){const m=s.rules[t];if(m.active&&m.responses){let t=m.responses.svcCode;if(t||(t="s200"),m.responses.body){let t={};m.responses.body;const g=s.endpoint.replace(":","_"),h=`${p.MOCK_ENDPOINT_PATH}/${s.id}/${c}/${m.id}${g}`;try{if("faker"===m.responses.respType){if("string"==typeof m.responses.body)try{m.responses.body=JSON.parse(m.responses.body)}catch(e){}t=o.generate(m.responses.body)}else t=m.responses.body;if(m.stateful){if(e.use(u,l),"faker"===m.responses.respType){if("string"==typeof m.responses.body)try{m.responses.body=JSON.parse(m.responses.body)}catch(e){}t={[i]:o.generate(m.responses.body)}}else"static"===m.responses.respType&&(t={[i]:m.responses.body});if(m.serviceName=i,!e[m.statefulId]){const s=a.router(t,{foreignKeySuffix:"id"});s.render=(e,t)=>{const s=d(e,t,t.locals.data);t.jsonp(s)},e[m.statefulId]=s}e.use(h,e[m.statefulId])}else e[c](u,l)}catch(s){n.error("[S_UTILS]",s),t[i]={error:"unsupported schema - currently draft 4 is supported for faker type"},n.debug(`[S_UTILS] Faker Registered: ${h}`),e.use(h,r,a.router(t))}}else e.use(u,r,l)}}else e.use(u,r,l)}}catch(e){n.info("Service endpoint: ",t),n.error(e)}return s},async removeServiceEndpoint(e,t){try{let s;if(t&&t.method){s=`${t.method.toLowerCase()}${t.endpoint}`,this.removeRoute(e,s)}}catch(e){n.error("[S_UTILS]",e);const t=new Error("Failed to delete service");throw t.code="ERR.INVALID.OPER",t.priority="ERROR",t}},removeRouteById(e,t){const s=e._router.stack;for(let e=0;e<s.length;e+=1){const r=s[e];r.regexp&&-1!==r.regexp.toString().indexOf(t)&&s.splice(e,1),r.path&&-1!==r.path.toString().indexOf(t)&&s.splice(e,1)}},removeRoute(e,t){},matchRoute:(e,t)=>e._router&&e._router.stack.find((e=>{if(e.regexp&&("router"===e.name||"responseExecution"===e.name||"bound dispatch"===e.name&&void 0===e.path)){return new RegExp(e.regexp).test(t)}})),listRoutes({server:e}){const t=[];return e._router.stack.forEach((e=>{e.regexp&&(t.push(`${e.name} - ${e.regexp}`),n.debug(`[LIST_ROUTES] ${e._name} - ${e.name} - ${e.regexp} `))})),t},getGitURL({token:e,url:t}){const s=c(t);return`https://${s.owner}:${e}@${s.resource}${s.pathname}`}}},5804:(e,t,s)=>{const r=s(4537),o=s(5027),a=s(1084).transform;function n(e,t){for(const s in t)try{t[s].constructor===Object?e[s]=n(e[s],t[s]):e[s]=t[s]}catch(r){e[s]=t[s]}return e}e.exports={postOutput:function(e,t,s){let i="";try{if(t.locals&&t.locals.transformObj){const e=t.locals.rule,o=t.locals.transformObj,c=JSON.parse(JSON.stringify(s)),p={request:o.fact,response:{body:c}};if(i=a(e.postTransform,p),e.transType&&"replace"===o.transType)delete t.locals.transformObj,i=JSON.parse(r(i));else{delete t.locals.transformObj;const e=n(JSON.parse(JSON.stringify(s)),i);i=JSON.parse(r(e))}}else i=s;!function(e,t,s,r){const o={_id:Math.ceil(Date.now()+Math.random()),method:t.method,query:t.query,params:t.params,requestHeaders:t.headers,responseHeaders:s.getHeaders(),statusCode:`${s.statusCode}`,body:t.body,originalUrl:t.originalUrl,output:r,startTime:s.locals.requestStartTime,endTime:Date.now()};e.logs||(e.logs=[]),e.logs.length>=25&&e.searchIndex.removeData(e.logs[e.logs.length-25]),s.locals.rule&&(o.rule={_id:s.locals.rule.id?s.locals.rule.id:Math.ceil(Date.now()+Math.random()),name:s.locals.rule.name,responseType:s.locals.rule.responses.respType}),s.locals.service&&(o.service={_id:s.locals.service.id,name:s.locals.service.name});const{mockServer:a}=global.workspaces[e.workspaceId];let n=a.server.searchIndex;e.logs.push(n.add(o))}(e.app,e,t,i)}catch(e){o.error(e)}return i}}},6978:(e,t,s)=>{const r=s(5027),o=s(2376),a=s(4298),n=s(5622),i=s(1051),c=s(1703),p=s(1180),l=s(8306),d=s(2522),u=s(5178),m=s(9265),g=s(4996),h=s(7837),f=s(3329),{PY_LICENSE_SERVER:v,PY_CALLBACK_URL:y}=l.readAppConfig(),{PY_USER_EMAIL:k,PY_SERIAL:w,PY_GITHUB_HOST:b,PY_GITHUB_USER_NAME:S,PY_GITHUB_TOKEN:$,PY_MOCK_SERVER_HOST:x,PY_MOCK_SERVER_PORT:E,PY_DEMO_MODE:_}=process.env,I=_&&"true"===_;async function D(e,t){return await o.get(`${v}/api/workspace/details/${e}`,{headers:{"x-api-token":t,"Content-Type":"application/json"}})}e.exports={initBasicServices:async function(e){e.get("/auth/mockswitch/callback",(async(e,t)=>{try{const s=await o.get(`${v}/api/user/profile`,{headers:{"x-auth-token":e.query.auth_code?e.query.auth_code:"","Content-Type":"application/json"}});if(s.data.error)return t.status(200).send({message:s.data.error});t.cookie("x-auth-token",e.query.auth_code,{maxAge:31556952e3,httpOnly:!0}),d.saveUser(s.data.id,s.data);for(let e=0;e<s.data.workspaces.length;e+=1){const t=s.data.workspaces[e];d.saveWorkspaceToken(t.workspaceId,t.token)}return t.redirect("/")}catch(e){return r.error(e),e.response?t.status(e.response.status).send(e.message):t.status(500).send({message:e.message})}})),e.get("/meta/env",((e,t)=>{t.contentType("application/json"),t.send({env:process.env,version:""})})),e.get("/meta/app/config",((e,t)=>{r.transports.file.resolvePath=()=>n.join(global.appRoot,"logs/main.log");const s={licenseServer:v,callback:y,demoMode:_};t.status(200).json({appConfig:s})})),e.get("/meta/__health",((e,t)=>{t.status(200).send("")})),e.post("/meta/:workspaceId/environment/active",(async({params:{workspaceId:e},body:{environment:t}},s)=>{try{let r=d.getUserSetttings(s.locals.user.id);if(r||(r={}),r.activeEnvironment||(r.activeEnvironment={}),t){global.workspaces[e].activeEnvironment=t,r.activeEnvironment[e]=t.environment,d.saveUserSetttings(s.locals.user.id,r)}return s.status(200).send(r)}catch(e){return r.error(e),e.response?s.status(e.response.status).send(e.response.data):(r.error(e),s.status(500).send({message:"Unable to connect to server"}))}})),e.get("/meta/workspace/active",(async(e,t)=>{const s=t.locals.user;try{let e,r=d.getUserSetttings(s.id);r||(r={});const o=s.workspaces;if(s.workspaces&&global.workspaces[r.activeWorkspaceId])for(let t=0;t<o.length;t+=1){const s=o[t];if(s&&s.workspaceId===r.activeWorkspaceId){e=r.activeWorkspaceId;break}}if(!e&&global.workspaces&&Object.keys(global.workspaces).length>0){const t=Object.keys(global.workspaces);for(let e=0;e<t.length;e+=1){const s=t[e],o=global.workspaces[s];o.mockServer&&"running"===o.mockServer.status&&r.activeWorkspaceId===s&&(u.stopMockServer(o.mockServer),u.stopConnector(o.connector),delete global.workspaces[s])}!e&&Object.keys(global.workspaces)&&Object.keys(global.workspaces).length>0&&(e=Object.keys(global.workspaces)[0])}if(e){if(0===o.filter((t=>t.workspaceId===e)).length){const t=global.workspaces[e];u.stopMockServer(t.mockServer),u.stopConnector(t.connector),delete global.workspaces[e],e=o[0].workspaceId}r.activeWorkspaceId=e,d.saveUserSetttings(t.locals.user.id,r)}else t.locals.user.workspaces&&t.locals.user.workspaces.length>0&&(e=t.locals.user.workspaces[0].workspaceId,r.activeWorkspaceId=e,d.saveUserSetttings(t.locals.user.id,r));return t.status(200).send({workspaceId:e})}catch(e){return r.error(e),e.response?t.status(e.response.status).send(e.response.data):(r.error(e),t.status(500).send({message:"Unable to connect to server"}))}})),e.post("/meta/:workspaceId/workspace/active",(async({params:{workspaceId:e}},t)=>{try{let s=d.getUserSetttings(t.locals.user.id);return s||(s={}),s.activeWorkspaceId=e,d.saveUserSetttings(t.locals.user.id,s),t.status(200).send(s)}catch(e){return r.error(e),e.response?t.status(e.response.status).send(e.response.data):(r.error(e),t.status(500).send({message:"Unable to connect to server"}))}})),e.post("/meta/service-tester",(async(e,t)=>{try{const s=await l.makeProxyCall(e,t),r={};return s&&(r.headers=s.headers,r.body=s.data,r.status=s.status),t.status(200).send(r)}catch(e){r.error(e);const s=e.response;if(s){const e={headers:s.headers,body:s.data,status:s.status};return t.status(200).send(e)}return e.response?t.status(e.response.status).send(e.message):t.status(500).send({message:e.message})}})),e.get("/meta/validate",(async(e,t)=>{r.transports.file.resolvePath=()=>n.join(global.appRoot,"logs/main.log");try{if(I)return t.status(200).send(m);if(t.locals.user)return t.status(200).send(t.locals.user);const s={user:t.locals.user};if(k&&w){s.user={email:k,serial:w};try{const r=await o.post(`${v}/api/login/serial`,s.user,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});return r.data.error?t.status(500).send({message:r.data.error.message}):(t.cookie("x-auth-token",r.data.token,{maxAge:31556952e3,httpOnly:!0}),t.status(200).send(r.data))}catch(e){return r.error(e),e.response?t.status(e.response.status).send(e.message):t.status(500).send({message:e.message})}}const a=await o.get(`${v}/api/user/profile`,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});if(PY_WORKSPACE_ID&&b&&S&&$&&x&&E){const e=c(x,E,!1),s=i(b,S,$),r=p(!1);return d.saveMockServer(PY_WORKSPACE_ID,e),d.saveConnector(PY_WORKSPACE_ID,s),t.status(200).send({mockServer:e,connector:s,userSettings:r})}return t.status(200).send(a.data)}catch(e){return r.error(e),401===e.response.status?t.status(200).send(m):(r.error(e),t.status(500).send({message:"Unable to connect servers"}))}})),e.post("/meta/login",(async(e,t)=>{try{if(t.locals.user)return t.status(200).send(t.locals.user);const s=await o.post(`${v}/api/login`,e.body,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});if(s.data.error)return t.status(200).send({message:s.data.error});t.cookie("x-auth-token",s.data.token,{maxAge:31556952e3,httpOnly:!0}),d.saveUser(s.data.user.id,s.data.user);for(let e=0;e<s.data.user.workspaces.length;e+=1){const t=s.data.user.workspaces[e];d.saveWorkspaceToken(t.workspaceId,t.token)}return t.status(200).send(s.data.user)}catch(e){return r.error(e),e.response?t.status(e.response.status).send(e.message):t.status(500).send({message:e.message})}})),e.post("/meta/signOut",(async(e,t)=>{try{if(!(b&&S&&$))try{await a.remove(`${global.appRoot}/workspaces}`)}catch(e){r.error(e)}const e=Object.keys(global.workspaces);for(let t=0;t<e.length;t+=1){const s=e[t];global.workspaces[s]&&u.stopMockServer(global.workspaces[s]),delete global.workspaces[s]}d.clearAllCachedMockConnectors(),d.removeUser(t.locals.user.id),t.removeHeader("x-auth-token"),t.cookie("x-auth-token","",{expires:new Date(0)}),t.status(200).send({status:!0})}catch(e){t.status(500).send({message:e.message})}})),e.post("/meta/product/activate",(async(e,t)=>{try{const s={serial:e.body.serial,machineId},r=await o.post(`${v}/api/product/activate`,s,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});if(r.data.error)t.status(500).send(r.data.message);else{t.cookie("x-auth-token",r.data.token,{maxAge:31556952e3,httpOnly:!0}),d.saveUser(r.data.user.id,r.data.user);for(let e=0;e<r.data.user.workspaces.length;e+=1){const t=r.data.user.workspaces[e];d.saveWorkspaceToken(t.workspaceId,t.token)}t.status(200).send(r.data)}}catch(e){e.response?t.status(e.response.status).send(e.message):t.status(500).send({message:e.message})}})),e.post("/meta/test/mock-server",(async({body:{mockServer:{host:e,port:t,useSSL:s}}},r)=>{try{let o={host:e,port:t,useSSL:s};o=await u.startMockServer(o),r.status(200).send({status:!0}),await u.stopMockServer({mockServer:o})}catch(e){r.status(200).send({status:!1,message:e.message})}})),e.post("/meta/:workspaceId/mock-server/start-stop",(async({body:{mockServer:{host:e,port:t,useSSL:s,start:o}},params:{workspaceId:a}},n)=>{try{const r=global.workspaces[a];r&&(o?(r.mockServer={host:e,port:t,useSSL:s},await u.startMockServer(r),n.status(200).send({status:!0})):(await u.stopMockServer(r),n.status(200).send({status:!0})))}catch(e){r.debug(e),n.status(200).send({status:!1})}})),e.post("/meta/test/connector",(async({body:{connector:{type:e,url:t,name:o,token:a,host:n,port:i,database:c}}},p)=>{try{if("github"===e){const e=s(2588),r=await e.checkConnectivity({url:t,name:o,token:a},!1);p.status(200).send({status:!0,branchSummary:r})}else"mongo"===e?(await f.checkConnectivity({host:n,port:i,database:c}),p.status(200).send({status:!0})):"file"===e&&p.status(200).send({status:!0})}catch(e){r.debug(e),e.errmsg&&e.errmsg.split("\n").length>0?p.status(200).send({code:"ERR.CON.101",status:!1,message:e.errmsg.split("\n")[0]}):p.status(200).send({code:"ERR.CON.101",status:!1,message:e.message})}})),e.post("/meta/adapters/update",((e,t)=>{t.status(200).send("")})),e.post("/meta/:workspaceId/bootstrap/adapter",(async({params:{workspaceId:e}},t)=>{try{l.bootstrapApp({workspaceId:e},(e=>{e.status?t.status(200).send(e):t.status(500).send(e)}))}catch(e){r.debug(e),t.status(500).send({status:!1,message:e.message})}})),e.get("/meta/:workspaceId/user/settings",(({params:{workspaceId:e}},t)=>{try{if(I)return t.status(200).send(g);const{id:s}=t.locals.user;let r,o,a,n=e,l=d.getUserSetttings(s);l||(l={darkTheme:!1,activeWorkspaceId:e},d.saveUserSetttings(s,l)),!n&&l&&l.activeWorkspaceId&&(n=l.activeWorkspaceId),l&&l.activeEnvironment&&(r=l.activeEnvironment[n]);const u={licenseServer:v,callback:y,demoMode:_};a=d.getConnector(n),o=d.getMockServer(n);const m=d.getVariables(n),h=d.getEnvironments(n);l=d.getUserSetttings(s);const f=global.workspaces[n];if(f&&f.mockServer){if(h){const e=h.filter((e=>e.environment===r));e&&e[0]&&(f.activeEnvironment=e[0])}f.connector&&(a?(a.offline=f.connector.offline,a.offlineMessage=f.connector.offlineMessage):a=f.connector),f.mockServer.server&&(o?(o.runningPort=f.mockServer.runningPort,o.status=f.mockServer.status):o=f.mockServer)}return d.saveMockServer(n,o),d.saveConnector(n,a),a?t.status(200).send({mockServer:o,connector:a,variables:m,environments:h,userSettings:l,appConfig:u,workspaceId:n,activeEnvironment:r}):b&&S&&$&&x&&E?(o=c(x,E,!1),a=i(b,S,$),l=p(!1),d.saveMockServer(n,o),d.saveConnector(n,a),d.saveUserSetttings(s,l),t.status(200).send({mockServer:o,variables:m,environments:h,connector:a,userSettings:l,appConfig:u,workspaceId:n,activeEnvironment:r})):t.status(200).send({mockServer:o,variables:m,environments:h,connector:a,userSettings:l,appConfig:u,workspaceId:n,activeEnvironment:r})}catch(e){return r.error(e),t.status(500).send({message:"ERR_101"})}})),e.post("/meta/:workspaceId/user/settings",(async({body:e,params:{workspaceId:t}},s)=>{try{const{id:r}=s.locals.user;l.bootstrapApp({workspaceId:t,newWorkspaceConfig:e,user:s.locals.user},((e,o)=>{if(e.status&&o){const e=d.getConnector(t),o=d.getMockServer(t),a=d.getEnvironments(t),n=d.getVariables(t),i=d.getUserSetttings(r),c=global.workspaces[t];let p;return c&&c.mockServer&&(c.connector&&(e.offline=c.connector.offline,e.offlineMessage=c.connector.offlineMessage,d.saveConnector(t,e)),c.mockServer.server&&(o.port=c.mockServer.port,o.runningPort=c.mockServer.runningPort,o.status=c.mockServer.status,d.saveMockServer(t,o))),i&&i.activeEnvironment&&(p=i.activeEnvironment[t]),s.status(200).send({mockServer:o,connector:e,variables:n,environments:a,userSettings:i,workspaceId:t,activeEnvironment:p})}return s.status(500).send(e)}))}catch(e){r.debug(e),s.status(500).send({status:!1,message:e.message,code:e.code})}})),e.get("/meta/:workspaceId/users",(async(e,t)=>{try{if(I)return t.status(200).send(h);const s=await o.get(`${v}/api/workspace/users?workspaceId=${e.params.workspaceId}`,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}});return t.status(200).send(s.data)}catch(e){return r.error(e),t.status(200).send([])}})),e.post("/meta/users/invite",(async(e,t)=>{try{return await l.inviteAccountUser(e,v),t.status(200).send({success:!0})}catch(e){return r.error(e),t.status(500).send({message:"Unable to invite user"})}})),e.put("/meta/workspace/users",(async(e,t)=>{try{const s={userId:e.body.id,workspaceId:e.body.workspaceId,role:e.body.role};return await o.put(`${v}/api/workspace/users`,s,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}}),t.status(200).send({success:!0})}catch(e){return r.error(e),t.status(500).send({message:"Unable to invite user"})}})),e.post("/meta/workspace/users/delete",(async(e,t)=>{try{const s={userId:e.body.userId,workspaceId:e.body.workspaceId,email:e.body.email};return await o.post(`${v}/api/workspace/users/delete`,s,{headers:{"x-auth-token":e.cookies["x-auth-token"]?e.cookies["x-auth-token"]:"","Content-Type":"application/json"}}),t.status(200).send({success:!0})}catch(e){return r.error(e),t.status(500).send({message:"Unable to remove user"})}})),e.get("/meta/:workspaceId/example/service/:id",(async(e,t)=>{try{let{connector:s}=I?{connector:{offlineMode:!1}}:global.workspaces[e.params.workspaceId],o={};if(!s.offlineMode){const s=await l.getExampleServices(e);if(s&&s.length>0)for(let t=0;t<s.length;t+=1){const r=s[t];if(r.id===e.params.id){o=r,o.name=r.name.replace(/__/g,"-").replace(/_/g," ");break}}return t.status(200).send(o)}if(s.offlineMode){const s=[],o=`${global.appRoot}/.examples`;let n=await a.readdir(o);if(n=n.filter((e=>!/(^|\/)\.[^\/\.]/g.test(e))),!(n&&n.length>0))return t.status(200).send([]);n.forEach((async t=>{t.indexOf(e.params.id)>-1&&s.push(new Promise(((e,s)=>{a.readFile(`${o}/${t}`,"utf-8",((t,o)=>{t&&(r.log(`Examples data file read error: ${t}`),s(t)),e(JSON.parse(o))}))})))})),await Promise.all(s).then((e=>{if(e&&e.length>0)return t.status(200).send(e[0]);t.status(500).send({status:!1,message:"Unable to fetch example service details"})}))}return t.status(200).send([])}catch(e){return r.error(e),t.status(200).send([])}}))},initWorkspaces:async function(){const e=new Promise((async(e,t)=>{const s=`${global.appRoot}/workspaces`,o=`${global.appRoot}/logs`,n=`${global.appRoot}/.examples`,i=`${global.appRoot}/uploads`;a.ensureDir(n),a.ensureDir(o),a.ensureDir(i),a.ensureDir(s),global.workspaces={};const c=d.getAllWorkspaceToken(),p=d.getAllUsers(),u=Object.keys(p),m=Object.keys(c),g=[];r.debug(`[App Bootstrap]Retrieved cached workspaces ${m.length}`);for(let e=0;e<m.length;e+=1){const t=m[e];try{D(t,c[t]).then((e=>{const s=e.data;let o=null;if(s&&(o=s.workspaces[0]),o){let e=!1;for(let s=0;s<u.length;s+=1){const a=u[s],n=d.getUser(a);if(n){for(let s=0;s<n.workspaces.length;s+=1){const a=n.workspaces[s];if(a&&a.workspaceId===o.workspaceId){e=!0,a.workspaceName=o.workspaceName,r.debug(`[App Bootstrap] Updating userWorkspace ${t}`);break}}r.debug(`[App Bootstrap] saveUser workspaceId ${t}`),d.saveUser(n.id,n)}}}r.debug(`[App Bootstrap] retrieveWorkspaceDetails workspaceId ${t}`)}),(e=>{r.info(`[Error] retrieveWorkspaceDetails workspaceId ${t}`,e),e.response&&e.response.status}))}catch(e){r.info(`[Error] retrieveWorkspaceDetails workspaceId ${t}`,e)}}for(let e=0;e<u.length;e+=1){const t=u[e],s=d.getUser(t);if(s)for(let e=0;e<s.workspaces.length;e+=1){const t=s.workspaces[e];g.push(t)}}if(0===g.length)return e();let h=[];for(let e=0;e<g.length;e+=1){const t=g[e],s=d.getWorkspaceConfig(t.workspaceId);s&&s.connector&&s.mockServer&&l.bootstrapApp({workspaceId:t.workspaceId,newWorkspaceConfig:s},(e=>{h.push(e.workspaceId),e.status?r.debug(`[Workspace Bootstrap][${e.workspaceId}] - complete.`):r.debug(`[Workspace Bootstrap][${e.workspaceId}]  - incomplete.`)}))}const f=setInterval((()=>{h.length===g.length&&(clearInterval(f),e())}),100)}));return e}}},9380:(e,t,s)=>{const r=s(8118),o=s(7551),a=s(7567),n=s(4190),i=s(4298),c=(s(5622),s(8633)),p=s(5027),l=s(8898),d=s(3434),u=s(8306),m=s(6563),g=s(2522),h=s(1508),{request:f}=s(8605),{PY_DEMO_MODE:v}=process.env,{PY_LICENSE_SERVER:y,PY_CALLBACK_URL:k}=u.readAppConfig();o.option({fixedProbabilities:!0,optionalsProbability:1,alwaysFakeOptionals:!0,failOnInvalidTypes:!1}),o.extend("faker",(()=>l)),o.extend("chance",(()=>d)),e.exports={initEditorServices:function(e){e.post("/meta/:workspaceId/user",(async({body:e,params:{workspaceId:t}},s)=>{try{const{connector:r}=global.workspaces[t],o=await r.store.addUpdateUser(e,s.locals.user);s.status(200).send(o)}catch(e){p.error(e.stack),s.status(500).send({message:e.message})}})),e.get("/meta/:workspaceId/user/:id",(async({params:{id:e},params:{workspaceId:t}},s)=>{const{connector:r}=global.workspaces[t],o=await r.store.getUser(e);s.status(200).send(o)})),e.post("/meta/:workspaceId/service/:id/clone",(async({params:{id:e},params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.getServices(e),n=JSON.parse(JSON.stringify(a));delete n.id,n.endpoint+="/clone",n.name+=" clone";const i=await o.store.addUpdateService(n,s.locals.user,!0);await m.generateServiceEndpoint(r,i),s.status(200).send(m.postProcessServiceObject(i))}catch(e){p.error("error cloning service",e),s.status(500).send({message:e.message,code:e.code,priority:e.priority})}})),e.post("/meta/:workspaceId/example/service/:id/clone",(async(e,t)=>{try{const{params:{id:s},params:{workspaceId:r}}=e,{mockServer:o,connector:a}=global.workspaces[r];a.store.setMockServer(o);let n={};const i=await u.getExampleServices(e);if(i&&i.length>0)for(let e=0;e<i.length;e+=1){const t=i[e];if(t.id===s){n=t,n.name=t.name.replace(/__/g,"-").replace(/_/g," ");break}}const c=JSON.parse(JSON.stringify(n));delete c.id,c.endpoint+="/clone",c.name+=" clone";const p=await a.store.addUpdateService(c,t.locals.user,!0);await m.generateServiceEndpoint(o,p),t.status(200).send(m.postProcessServiceObject(p))}catch(e){p.error(`error cloning service: ${e}`),t.status(500).send({message:e.message,code:e.code,priority:e.priority})}})),e.get("/meta/:workspaceId/service/groups",(async({params:{workspaceId:e}},t)=>{const{connector:s}=global.workspaces[e],r=await s.store.readWorkspaceServiceGroups({workspaceId:e,type:"serviceGroups"},t.locals.user);t.status(200).send(r)})),e.post("/meta/:workspaceId/service/groups",(async({body:e,params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.writeWorkspaceServiceGroups({workspaceId:t,serviceGroups:e,type:"serviceGroups"},s.locals.user);s.status(200).send(a)}catch(e){e.code?s.status(500).send({message:e.message,code:e.code,priority:e.priority}):(p.debug(e),p.error(`error updating service groups: ${e}`),s.status(500).send({message:e.message}))}})),e.get("/meta/:workspaceId/service/dataTypes",(async({params:{workspaceId:e}},t)=>{const{connector:s}=global.workspaces[e],r=await s.store.readWorkspaceServiceGroups({workspaceId:e,type:"dataTypes"},t.locals.user);t.status(200).send(r)})),e.post("/meta/:workspaceId/service/dataTypes",(async({body:e,params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.readWorkspaceServiceGroups({workspaceId:t,type:"dataTypes"},s.locals.user);let n=[];a&&"object"==typeof a&&(n=Buffer.isBuffer(a)?JSON.parse(a):a);let i=-1;n&&n.length>0&&(i=n.findIndex((t=>t.id===e.id))),e&&e.isDelete?n.splice(i,1):i>-1?n[i]=e:n.push(e),await o.store.writeWorkspaceServiceGroups({workspaceId:t,dataTypes:n,type:"dataTypes"},s.locals.user),s.status(200).send(n)}catch(e){e.code?s.status(500).send({message:e.message,code:e.code,priority:e.priority}):(p.debug(e),p.error(`error updating service groups: ${e}`),s.status(500).send({message:e.message}))}})),e.post("/meta/:workspaceId/service",(async({body:e,params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.addUpdateService(e,s.locals.user);await m.generateServiceEndpoint(r,a),s.status(200).send(m.postProcessServiceObject(a))}catch(e){e.code?s.status(500).send({message:e.message,code:e.code,priority:e.priority}):(p.debug(e),p.error(`error creating service: ${e}`),s.status(500).send({message:e.message}))}})),e.put("/meta/:workspaceId/service",(async({body:e,params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.addUpdateService(e,s.locals.user);await m.generateServiceEndpoint(r,a),s.status(200).send(m.postProcessServiceObject(a))}catch(e){p.error(e),e.code?s.status(500).send({message:e.message,code:e.code,priority:e.priority}):(p.error(`error updating service: ${e}`),s.status(500).send({message:e.message}))}})),e.delete("/meta/:workspaceId/service/:id",(async({params:{id:e},params:{workspaceId:t}},s)=>{try{const{mockServer:r,connector:o}=global.workspaces[t];o.store.setMockServer(r);const a=await o.store.removeService(e,s.locals.user);await m.removeServiceEndpoint(r,a),s.status(200).send(m.postProcessServiceObject(a))}catch(t){p.debug(t),p.error(`error deleting service ${e}: ${t}`),s.status(500).send({message:t.message})}})),e.delete("/meta/:workspaceId/service",(async(e,t)=>{try{const s=e.params.workspaceId,r=e.query.serviceIds?e.query.serviceIds.split(";"):[],{mockServer:o,connector:a}=global.workspaces[s];a.store.setMockServer(o);if(r&&r.length>0){const e=[],s={};for(let n=0;n<r.length;n+=1){const i=r[n];try{const r=await a.store.removeService(i,t.locals.user);await m.removeServiceEndpoint(o,r),s[i]=!0,e.push(r)}catch(e){s[i]=!1}}e.length===r.length?t.status(200).send(e):t.status(500).send({message:"Unable to delete services"})}else t.status(400).send({message:"Service Id(s) required"})}catch(s){p.debug(s),p.error(`error deleting service ${e.query.serviceIds}: ${s}`),t.status(500).send({message:s.message})}})),e.get("/meta/:workspaceId/services",(async({params:{workspaceId:e}},t)=>{try{let s=[];if(global.workspaces[e]){const{connector:t}=global.workspaces[e];t.forceMode=!1,"github"===t.type&&t.store.checkConnectivity(t.adapter).then((()=>{p.debug("checkConnectivity success"),t.offlineMode=!1,t.forceMode=!0})).catch((()=>{t.offlineMode=!0,p.debug("checkConnectivity rejected")})),t.forceMode&&(t.forceMode=!1,await t.store.forceRead()),s=await t.store.getServices()}t.status(200).send(s)}catch(e){p.debug(e),p.error(`error fetching services: ${e}`),t.status(500).send({message:e.message})}})),e.get("/meta/:workspaceId/example/services",(async(e,t)=>{try{let{connector:s}=demoMode?{connector:{offlineMode:!1}}:global.workspaces[e.params.workspaceId];if(!s.offlineMode){const s=await u.getExampleServices(e);return t.status(200).send(s.data)}if(s.offlineMode){const e=[];let s=await i.readdir(servicesDir);if(s=s.filter((e=>!/(^|\/)\.[^\/\.]/g.test(e))),!(s&&s.length>0))return t.status(200).send([]);s.forEach((async t=>{e.push(new Promise(((e,s)=>{i.readFile(`${servicesDir}/${t}`,"utf-8",((t,r)=>{t&&(p.log(`Examples data file read error: ${t}`),s(t)),e(JSON.parse(r))}))})))})),await Promise.all(e).then((e=>t.status(200).send(e)))}return t.status(200).send([])}catch(e){return p.error(e),t.status(200).send([])}})),e.get("/meta/:workspaceId/refresh",(async(e,t)=>{try{const{params:{workspaceId:s}}=e;if(global.workspaces[s]){const{mockServer:r,connector:o}=global.workspaces[s];let a=await o.store.readWorkspaceServiceGroups({workspaceId:s,type:"dataTypes"},t.locals.user);o.store.setMockServer(r);let n=await o.store.readWorkspaceServiceGroups({workspaceId:s,type:"serviceGroups"},t.locals.user),i=[];"string"==typeof n&&(n=JSON.parse(n)),a&&"object"==typeof a&&Buffer.isBuffer(a)&&(a=JSON.parse(a)),o.forceMode=!1,"github"===o.type&&o.store.checkConnectivity(o.adapter).then((()=>{p.debug("checkConnectivity success"),o.offlineMode=!1,o.forceMode=!0})).catch((()=>{o.offlineMode=!0,p.debug("checkConnectivity rejected")})),o.forceMode&&(o.forceMode=!1,await o.store.forceRead()),i=await o.store.getServices();let c=[];try{c=await u.getExampleServices(e)}catch(e){}t.status(200).send({dataTypes:a,serviceGroups:n,services:i,exampleServices:c})}}catch(e){p.debug(e),p.error(`error fetching services: ${e}`),t.status(500).send({message:e.message})}})),e.get("/meta/:workspaceId/service/force",(async({params:{workspaceId:e}},t)=>{try{const{connector:s}=global.workspaces[e];await s.store.forceRead();const r=await s.store.getServices();t.status(200).send(r)}catch(e){p.debug(e),p.error(`error fetching service force: ${e}`),t.status(500).send({message:e.message})}})),e.get("/meta/:workspaceId/service/:id",(async({params:{workspaceId:e},params:{id:t}},s)=>{try{const r=global.workspaces[e];if(v&&"true"===v&&s.status(200).send(h),r)if("default"===t||"new"===t)s.status(200).send(h);else{console.time("getServices");const e=await r.connector.store.getServices(t);e?s.status(200).send(m.postProcessServiceObject(e)):s.status(500).send({code:"ERR.404",message:"Service not found"}),console.timeEnd("getServices")}else s.status(500).send({message:"Connector is not defined"})}catch(e){p.debug(e),p.error(`error fetching service with id ${t}: ${e}`),s.status(500).send({message:e.message})}})),e.post("/meta/:workspaceId/schema",((e,t)=>{try{const s=r(e.body);t.status(200).send(s)}catch(e){t.status(200).send({error:e.message})}})),e.post("/meta/:workspaceId/schema/fake",(async(e,t)=>{const s=e.body;try{const e=await o.resolve(s);t.status(200).send(e)}catch(e){t.status(200).send({error:e.message})}})),e.post("/meta/:workspaceId/static/upload",c({dest:`${global.appRoot}/uploads`}).any(),((e,t)=>{const s=e.files[0];try{if(s){const e=XLSX.readFile(`${__dirname}/../${s.path}`),r=e.SheetNames,o=XLSX.utils.sheet_to_json(e.Sheets[r[0]]),a={path:s.path,fileName:s.filename,originalName:s.originalname,rows:o.length,samples:[]};for(let e=0;e<a.rows;e+=1)a.samples.push(o[e]);t.status(200).send(a)}}catch(e){t.status(500).end(e.message)}})),e.post("/meta/:workspaceId/import",c({dest:`${global.appRoot}/uploads`}).any(),((e,t)=>{const s=e.files[0],{workspaceId:r}=e.params;if(s)try{const{mockServer:o,connector:c}=global.workspaces[r];c.store.setMockServer(o),i.readFile(s.path,"utf8",(async(s,r)=>{i.unlinkSync(e.files[0].path);let o,c=null,l=!1;try{const e=JSON.parse(r);e.info&&e.info._postman_id&&(c=await n(e)),(e.swagger||e.openapi)&&(c=await a(e)),l=!0}catch(e){o=e,p.error(e)}l?t.status(200).send(c):t.status(500).end(o.stack)}))}catch(e){p.error(`error uploading swagger: ${e}`),t.status(500).end(e.stack)}else t.status(200).end()})),e.post("/meta/:workspaceId/import/create",(async(e,t)=>{const{services:s,environment:r,serviceGroups:o}=e.body,{workspaceId:a}=e.params;if(s)try{const{mockServer:e,connector:n}=global.workspaces[a];if(n.store.setMockServer(e),r){const e=Object.keys(r.variables),t=[];for(let s=0;s<e.length;s+=1)t.push({key:e[s],value:""});r.variables=t,g.addEnvironment(a,r)}o&&await n.store.writeWorkspaceServiceGroups({workspaceId:a,serviceGroups:o,type:"serviceGroups"},t.locals.user);for(let r=0;r<s.length;r+=1){const o=s[r],a=await n.store.addUpdateService(o,t.locals.user);await m.generateServiceEndpoint(e,a)}t.status(200).send(s)}catch(e){p.error(`error creating mock services from uploaded file: ${e}`),t.status(500).end(e.stack)}else t.status(200).end()})),e.get("/meta/:workspaceId/list-routes",(({params:{workspaceId:e}},t)=>{const{mockServer:s}=global.workspaces[e];t.status(200).send(m.listRoutes(s))})),e.get("/meta/:workspaceId/logs",(({params:{workspaceId:e},query:{q:t}},s)=>{const{mockServer:r}=global.workspaces[e];let o=[];o=t?r.server.searchIndex.search(t):r.server.searchIndex.data,o=o.filter((e=>void 0!==e)),s.status(200).send(o)})),e.get("/meta/:workspaceId/logs/clear",(({params:{workspaceId:e}},t)=>{const{mockServer:s}=global.workspaces[e];s.server.searchIndex.drop(),s.server.logs=[],t.status(200).send({result:!0})}))}}},9434:(e,t,s)=>{const r=s(5027),o=s(6563);e.exports=async({mockServer:e,connector:t})=>{await async function(e,t){r.info("[Init endpoints] Generating endpoints");const s=await t.store.getServices();for(let t=0;t<s.length;t+=1){const r=s[t];o.generateServiceEndpoint(e,r)}global.expressApp.emit("services-init")}(e,t)}},7804:(e,t,s)=>{const r=s(2473);e.exports=[r.json({limit:"10mb",extended:!1}),r.urlencoded({extended:!1})]},6766:(e,t,s)=>{const r=s(5747),o=s(5622),a=s(2127),n=s(8150),i=s(479),c=s(4995),p=(s(3400),s(7804));e.exports=function(e){const t=o.join(process.cwd(),"public"),s=o.join(__dirname,"../../public"),l=r.existsSync(t)?t:s,d=[];return(e=Object.assign({logger:!0,static:l},e)).noGzip||d.push(c()),e.noCors||d.push(i({origin:!0,credentials:!0})),d.push(a.static(e.static)),e.logger&&d.push(n("dev",{skip:e=>"/favicon.ico"===e.path})),d.push(((e,t,s)=>{t.header("Cache-Control","no-cache"),t.header("Pragma","no-cache"),t.header("Expires","-1"),s()})),e.readOnly&&d.push(((e,t,s)=>{"GET"===e.method?s():t.sendStatus(403)})),e.bodyParser&&d.push(p),d}},9922:(e,t,s)=>{const r=s(2127);e.exports={create:()=>r().set("json spaces",2),defaults:s(6766),router:s(162),rewriter:s(9644),bodyParser:s(7804)}},9684:(e,t,s)=>{const{nanoid:r}=s(324),o=s(6329);e.exports={getRemovable:function(e,t){const s=this,r=[];return s.each(e,((a,n)=>{s.each(a,(a=>{s.each(a,((i,c)=>{if(new RegExp(`${t.foreignKeySuffix}$`).test(c)){const p=o.plural(c.replace(new RegExp(`${t.foreignKeySuffix}$`),""));if(e[p]){const t=s.getById(e[p],i);s.isUndefined(t)&&r.push({name:n,id:a.id})}}}))}))})),r},createId:function(e){const t=this,s=t.__id();if(t.isEmpty(e))return 1;{let o=t(e).maxBy(s)[s];return t.isFinite(o)?++o:r(7)}},deepQuery:function(e,t){const s=this;if(e&&t)if(s.isArray(e)){for(let r=0;r<e.length;r++)if(s.deepQuery(e[r],t))return!0}else if(s.isObject(e)&&!s.isArray(e)){for(const r in e)if(s.deepQuery(e[r],t))return!0}else if(-1!==e.toString().toLowerCase().indexOf(t))return!0}}},9644:(e,t,s)=>{const r=s(2127),o=s(1057);e.exports=e=>{const t=r.Router();return t.name="stateful-rewriter",t.get("/__rules",((t,s)=>{s.json(e)})),Object.keys(e).forEach((s=>{t.use(o(s,e[s]))})),t}},5397:(e,t,s)=>{const r=s(6657);e.exports=function(e,t,s){const o=isNaN(parseFloat(e.query._delay))?1:parseFloat(e.query._delay);delete e.query._delay,r(o)(e,t,s)}},4558:(e,t,s)=>{const r=s(8835);e.exports=function(e){return`${r.format({protocol:e.protocol,host:e.get("host")})}${e.originalUrl}`}},162:(e,t,s)=>{const r=s(2127),o=(s(4524),s(3804)),a=s(8076),n=s(1257),i=s(8897),c=s(6035),p=(s(7804),s(5126)),l=s(7383),d=s(9823),u=s(6527),m=s(9684);e.exports=(e,t)=>{t=Object.assign({foreignKeySuffix:"Id",_isFake:!1},t),"string"==typeof e?e=n(new c(e)):o.has(e,"__chain__")&&o.has(e,"__wrapped__")||(e=n(new i).setState(e));const s=r.Router();return s.name="stateful",p(e.getState()),e._.mixin(a),e._.mixin(m),s.db=e,s.render=(e,t)=>{t.jsonp(t.locals.data)},s.get("/db",((t,s)=>{s.jsonp(e.getState())})),s.use(d(t)),e.forEach(((r,a)=>{if(o.isPlainObject(r))return void s.use(`/${a}`,u(e,a,t));if(o.isArray(r))return void s.use(`/${a}`,l(e,a,t));throw new Error(`Type of "${a}" (${typeof r})  is not supported. Use objects or arrays of objects.`)})).value(),s.use(((e,t)=>{t.locals.data||(t.status(404),t.locals.data={}),s.render(e,t)})),s.use(((e,t,s,r)=>{console.error(e.stack),s.status(500).send(e.stack)})),s}},9823:(e,t,s)=>{const r=s(2127),o=s(6329),a=s(5397);e.exports=e=>{const t=r.Router();return t.name="stateful-nested",t.use(a),t.get("/:resource/:id/:nested",(function(t,s,r){const a=o.singular(t.params.resource);t.query[`${a}${e.foreignKeySuffix}`]=t.params.id,t.url=`/${t.params.nested}`,r()})).post("/:resource/:id/:nested",(function(t,s,r){const a=o.singular(t.params.resource);t.body[`${a}${e.foreignKeySuffix}`]=t.params.id,t.url=`/${t.params.nested}`,r()}))}},7383:(e,t,s)=>{const r=s(2127),o=s(3804),a=s(6329),n=s(1050),i=s(4558),c=s(234),p=s(5397);e.exports=function(e,t,s){const l=r.Router();function d(r,o){o&&[].concat(o).forEach((o=>{if(e.get(o).value){const n={};n[`${a.singular(t)}${s.foreignKeySuffix}`]=r.id,r[o]=e.get(o).filter(n).value()}}))}function u(t,r){r&&[].concat(r).forEach((r=>{const o=a(r);if(e.get(o).value()){const a=`${r}${s.foreignKeySuffix}`;t[r]=e.get(o).getById(t[a]).value()}}))}function m(r,o,a){const n=r.params.id;let i;if(s._isFake)i=e.get(t).getById(n).value(),i="PATCH"===r.method?{...i,...r.body}:{...r.body,id:i.id};else{let s=e.get(t);s="PATCH"===r.method?s.updateById(n,r.body):s.replaceById(n,r.body),i=s.value()}i&&(o.locals.data=i),a()}l.name="stateful-plural",l.use(p);const g=n(e);return l.route("/").get((function(s,r,a){let n=e.get(t),p=s.query.q,l=s.query._start,m=s.query._end,g=s.query._page;const h=s.query._sort,f=s.query._order;let v=s.query._limit;const y=s.query._embed,k=s.query._expand;if(delete s.query.q,delete s.query._start,delete s.query._end,delete s.query._sort,delete s.query._order,delete s.query._limit,delete s.query._embed,delete s.query._expand,Object.keys(s.query).forEach((r=>{const a=e.get(t).value();for(const e in a)if(o.has(a[e],r)||"callback"===r||"_"===r||/_lte$/.test(r)||/_gte$/.test(r)||/_ne$/.test(r)||/_like$/.test(r))return;delete s.query[r]})),p&&(Array.isArray(p)&&(p=p[0]),p=p.toLowerCase(),n=n.filter((t=>{for(const s in t){const r=t[s];if(e._.deepQuery(r,p))return!0}return!1}))),Object.keys(s.query).forEach((e=>{if("callback"!==e&&"_"!==e){const t=[].concat(s.query[e]),r=/_ne$/.test(e),a=/_lte$/.test(e)||/_gte$/.test(e),i=/_like$/.test(e),c=e.replace(/(_lte|_gte|_ne|_like)$/,"");n=n.filter((s=>t.map((function(t){const n=o.get(s,c);if(null!=n){if(a){return/_gte$/.test(e)?t<=n:t>=n}return r?t!==n.toString():i?new RegExp(t,"i").test(n.toString()):t===n.toString()}})).reduce(((e,t)=>r?e&&t:e||t))))}})),h){const e=h.split(","),t=(f||"").split(",").map((e=>e.toLowerCase()));n=n.orderBy(e,t)}if((m||v||g)&&(r.setHeader("X-Total-Count",n.size()),r.setHeader("Access-Control-Expose-Headers","X-Total-Count"+(g?", Link":""))),g){g=parseInt(g,10),g=g>=1?g:1,v=parseInt(v,10)||10;const e=c.getPage(n.value(),g,v),t={},a=i(s);e.first&&(t.first=a.replace(`page=${e.current}`,`page=${e.first}`)),e.prev&&(t.prev=a.replace(`page=${e.current}`,`page=${e.prev}`)),e.next&&(t.next=a.replace(`page=${e.current}`,`page=${e.next}`)),e.last&&(t.last=a.replace(`page=${e.current}`,`page=${e.last}`)),r.links(t),n=o.chain(e.items)}else m?(l=parseInt(l,10)||0,m=parseInt(m,10),n=n.slice(l,m)):v&&(l=parseInt(l,10)||0,v=parseInt(v,10),n=n.slice(l,l+v));n=n.cloneDeep().forEach((function(e){d(e,y),u(e,k)})),r.locals.data=n.value(),a()})),l.route("/").post((function(r,o,a){let n;if(s._isFake){const s=e.get(t).createId().value();n={...r.body,id:s}}else n=e.get(t).insert(r.body).value();o.setHeader("Access-Control-Expose-Headers","Location"),o.location(`${i(r)}/${n.id}`),o.status(201),o.locals.data=n,a()}),g),l.route("/:id").get((function(s,r,a){const n=s.query._embed,i=s.query._expand,c=e.get(t).getById(s.params.id).value();if(c){const e=o.cloneDeep(c);d(e,n),u(e,i),r.locals.data=e}a()})),l.route("/:id").put(m,g),l.route("/:id").patch(m,g),l.route("/:id").delete((function(r,o,a){let n;if(s._isFake)n=e.get(t).value();else{n=e.get(t).removeById(r.params.id).value();e._.getRemovable(e.getState(),s).forEach((t=>{e.get(t.name).removeById(t.id).value()}))}n&&(o.locals.data={}),a()}),g),l}},6527:(e,t,s)=>{const r=s(2127),o=s(1050),a=s(4558),n=s(5397);e.exports=(e,t,s)=>{const i=r.Router();function c(r,o,a){if(s._isFake)if("PUT"===r.method)o.locals.data=r.body;else{const s=e.get(t).value();o.locals.data={...s,...r.body}}else"PUT"===r.method?e.set(t,r.body).value():e.get(t).assign(r.body).value(),o.locals.data=e.get(t).value();a()}i.name="stateful-singular",i.use(n);const p=o(e);return i.route("/").get((function(s,r,o){r.locals.data=e.get(t).value(),o()})).post((function(r,o,n){s._isFake?o.locals.data=r.body:(e.set(t,r.body).value(),o.locals.data=e.get(t).value()),o.setHeader("Access-Control-Expose-Headers","Location"),o.location(`${a(r)}`),o.status(201),n()}),p).put(c,p).patch(c,p),i}},5126:(e,t,s)=>{const r=s(3804);function o(e){if(-1!==e.indexOf("/")){const t=[`Oops, found / character in database property '${e}'.`,"","/ aren't supported, if you want to tweak default routes, see","https://github.com/typicode/json-server/#add-custom-routes"].join("\n");throw new Error(t)}}e.exports=e=>{if(!r.isPlainObject(e))throw new Error(`Data must be an object. Found ${typeof e}.See https://github.com/typicode/json-server for example.`);Object.keys(e).forEach(o)}},1050:e=>{e.exports=function(e){return(t,s,r)=>{e.write(),r()}}},234:e=>{e.exports={getPage:function(e,t,s){const r={},o=(t-1)*s,a=t*s;if(r.items=e.slice(o,a),0===r.items.length)return r;t>1&&(r.prev=t-1);a<e.length&&(r.next=t+1);r.items.length!==e.length&&(r.current=t,r.first=1,r.last=Math.ceil(e.length/s));return r}}},8038:(e,t,s)=>{const r=s(4298),o=s(5622),a=s(4537);e.exports={async removePair(e,t){try{const s=`${e}/${t.id}.json`;r.remove(this.resolve(`${s}`))}catch(e){throw new Error(e)}},savePair(e,t){try{const s=t.pairings.static.samples,o={};for(let e=0;e<s.length;e+=1){const t=s[e],r=Buffer.from(a(JSON.parse(t.Request)));o[r.toString("base64")]=a(JSON.parse(t.Response))}const n=this.resolve(`${e}/${t.id}.json`);if(r.outputJsonSync(n,o),t.pairings.static.path&&t.pairings.static.path.length>0){const e=this.resolve(`${__dirname}/../${t.pairings.static.path}`);r.removeSync(e)}}catch(e){throw new Error(e)}},search(e,t,s,o){try{const n=this.resolve(`${e}/${t.id}.json`);r.readJson(n,((e,t)=>{if(e)throw e;const r=`${Buffer.from(a(s,null,"")).toString("base64")}`;o(t[r])}))}catch(e){throw new Error(e)}},resolve:e=>o.resolve(__dirname,e)}},8669:(e,t,s)=>{const r=s(4298),o=s(4537),a=s(5622),n=s(5712),i=s(5027),c=s(8038),p=s(6563);function l(e){return a.resolve(__dirname,e)}class d{constructor(e,t){i.info("[FileAdapter] constructor"),this.workspaceDir=`${e}/py_mocks`,this.userDataDir=`${this.workspaceDir}/py_data`,this.pairingsDir=`${this.workspaceDir}/py_pairings`,this.serviceDir=`${this.workspaceDir}/.py_services`,this.workspaceFile=`${this.workspaceDir}/.workspace`,this.serviceGroupsFile=`${this.workspaceDir}/.py_service_groups`,this.dataTypesFile=`${this.workspaceDir}/.py_dataTypes`,r.ensureDirSync(l(this.workspaceDir)),this.connector=t.connector,this.mockServer=t.mockServer}read(){const e={services:[],users:[]};try{r.ensureDirSync(l(this.serviceDir));const t=d.findFiles(l(this.serviceDir));if(t){for(let s=0;s<t.length;s+=1){const r=t[s],o=d.readFile(l(`${this.serviceDir}/${r}`),"utf-8");if(o){const t=o;if(t.method&&t.endpoint&&!t._delete)this.readUserMockData(t,(t=>{e.services.push(t)}));else try{d.deleteFile(l(`${this.serviceDir}/${r}`)),i.log(`clean up: ${this.serviceDir}/${r}`)}catch(e){i.error(e)}}}this.mockServer.started=!0}}catch(e){throw e instanceof SyntaxError&&(e.message=`Malformed JSON in file: ${this.serviceDir} ${this.pairingsDir}\n${e.message}`),e}return e}async write(e){try{r.ensureDirSync(l(this.pairingsDir));let t=`${this.pairingsDir}/${e.id}.json`;if(e.services)for(let s=0;s<e.services.length;s+=1){const r=e.services[s],a=r.modifiedBy;r.modifiedEmail;t=`${this.serviceDir}/${r.id}.json`,r._update&&r.id?(delete r._update,this.writeUserMockData(r),r._delete||(i.info(`[FileAdapter] Updating service: ${r.id}, ${a}`),d.writeFile(l(t),o(r,null,2)),r.pairings.static.samples&&r.pairings.static.samples.length>0&&c.savePair(this.pairingsDir,r))):r._delete&&(i.info(`[FileAdapter] Deleting service: ${r.id}, ${a} ${l(t)}`),d.deleteFile(l(t)))}}catch(e){if(e.code)throw new{message:e.message,code:e.code,priority:e.priority};throw i.error(e),i.error(`error writing data into memory: ${e}`),new Error(e)}}async readUserMockData(e,t){if(e&&e.rules)for(let t=0;t<e.rules.length;t+=1){const s=e.rules[t],{responses:o}=s;if(o&&o.userDataPath)try{r.ensureDirSync(l(this.userDataDir));const e=d.readFile(l(`${this.userDataDir}/${o.userDataPath}`),"utf-8"),t=JSON.parse(e);t&&(o.body=t)}catch(e){i.error("json parse error",e),o.body={}}}t(e)}async writeUserMockData(e){if(e&&e.rules)for(let t=0;t<e.rules.length;t+=1){const s=e.rules[t],{responses:r}=s;if(r){const a=`${e.name}_case_${t+1}.json`;if(r.userDataPath&&r.userDataPath!==a&&await d.deleteFile(l(`${this.userDataDir}/${s.userDataPath}`)),r.userDataPath=a,r.body){let e=r.body;"string"!=typeof r.body&&(e=JSON.stringify(r.body));try{JSON.parse(r.body);d.writeFile(l(`${this.userDataDir}/${r.userDataPath}`),o(r.body,null,2))}catch(e){i.error(e.message)}}}}}async writeWorkspaceServiceGroups({workspaceId:e,serviceGroups:t,type:s,dataTypes:a},n){if(e&&n){let c;i.debug(e,n);for(let t=0;t<n.workspaces.length;t+=1)if(e===n.workspaces[t].workspaceId){c=n.workspaces[t];break}let p,u="";"serviceGroups"===s?(u=this.serviceGroupsFile,p=t):"dataTypes"===s&&(u=this.dataTypesFile,p=a),r.ensureFileSync(l(u)),c&&d.writeFile(l(`${u}`),o(p,null,2))}}async readWorkspaceServiceGroups({type:e}){let t="";"serviceGroups"===e?t=this.serviceGroupsFile:"dataTypes"===e&&(t=this.dataTypesFile),r.ensureFileSync(l(t));let s=d.readFile(l(`${t}`),"utf-8");return"serviceGroups"===e&&(s=p.processServiceGroups(s)),s}async writeWorkspaceConnectorData({workspaceId:e},t){if(e&&t){let s;i.debug(e,t);for(let r=0;r<t.workspaces.length;r+=1)if(e===t.workspaces[r].workspaceId){s=t.workspaces[r];break}r.ensureFileSync(l(this.workspaceFile)),s&&s.owner&&d.writeFile(l(`${this.workspaceFile}`),o(s.workspaceUsers,null,2))}}async readWorkspaceConnectorData(){r.ensureFileSync(l(this.workspaceFile));return d.readFile(l(`${this.workspaceFile}`),"utf-8")}static readFile(e){return n.readFileSync(e,{throws:!1})}static deleteFile(e){r.removeSync(e)}static writeFile(e,t){r.outputFileSync(e,t)}static findFiles(e){return r.readdirSync(e).filter((t=>!r.statSync(a.join(e,t)).isDirectory()))}}e.exports=d},822:(e,t,s)=>{const r=s(4298),o=s(5027),a=s(7391),n=s(4298),i=s(5622),c=s(1727),p=s(1257),l=s(2772),d=s(8669);e.exports=class{constructor(e){this.metaDir=`${global.appRoot}/workspaces/${e}`,o.info(`[File Connector] User meta director:${this.metaDir}`),n.ensureDirSync(this.metaDir)}static async checkConnectivity({url:e,name:t,token:s}){const r=GitConnector.getGitURL({url:e,name:t,token:s}),a=c.dirSync({unsafeCleanup:!0});o.debug(`[File Connector]  check connectivity - ${a.name} remote- ${r}`);const n={baseDir:a.name,binary:"git",maxConcurrentProcesses:1},i=l(n);return new Promise((async(e,t)=>{try{const t=[],s=(await i.init().addRemote("origin",r).listRemote(["--heads","origin"])).split("\n").map((e=>e.split("\t")));for(let e=0;e<s.length;e+=1){const r=s[e];if(2===r.length){const e=r[1];t.push(e.split("/")[2])}}o.info("[File Connector]  branchSummary -",t),a.removeCallback(),e(t)}catch(e){o.error(e),a.removeCallback(),t(e)}}))}static getGitURL({url:e,name:t,token:s}){let r;try{const n=a(e);r=`${n.protocol}//${t}:${s}@${n.host}/${n.path}`,o.debug(r)}catch(e){o.error(e)}return r}async connectDatasource(e,t){try{e?(o.debug(`[File Connector]  connectorDifferences - ${t}`),e.offlineMode=!1):e.offlineMode=!0}catch(t){o.error(t);try{await r.removeSync((s=this.metaDir,i.resolve(__dirname,s))),o.debug("[File Connector]  removed meta dir",this.metaDir)}catch(e){o.error(e)}e.offlineMode=!0,e.offlineMessage=t.message,o.error("[File Connector]  Error Connecting:",t),o.info("[File Connector]  Running on cached mode...")}var s}async initStorage(e,t){const{connector:s}=e;try{if(o.info(`[File Connector]  initStorage workspaceConfig.connector: ${e.connector}  ${t}`),e.connector){console.time("[git timing] FileAdapter");const t=new d(this.metaDir,e);s.metaDb=p(t),console.timeEnd("[git timing] FileAdapter"),s.metaDb.adapter=t,o.info("[File Connector]  initStorage App Initialized:")}}catch(e){o.error(e)}}}},621:(e,t,s)=>{const r=s(227),o=(s(5027),s(4625)()),a=s(1574)(),n=s(6563);e.exports=class extends o{static orderByDate(e,t){return e.slice().sort(((e,s)=>e[t]>s[t]?-1:1))}constructor(e){super(),this.metaDb&&this.metaDb.connection&&this.metaDb.connection.close(),this.connector=e.connector,this.workspaceConfig=e,this.metaDb=this.connector.metaDb,this.setMockServer(e.mockServer)}setMockServer(e){this.mockServer=e,this.storageUtils=s(2168)(this.mockServer)}reInitStorage(){this.connector.recheck=!0}async forceRead(){return await this.metaDb.read(),!0}readWorkspaceConnectorData(){return this.metaDb.adapter.readWorkspaceConnectorData()}writeWorkspaceConnectorData(e,t){return this.metaDb.adapter.writeWorkspaceConnectorData(e,t)}readWorkspaceServiceGroups({workspaceId:e,type:t},s){return this.metaDb.adapter.readWorkspaceServiceGroups({workspaceId:e,type:t},s)}writeWorkspaceServiceGroups({workspaceId:e,serviceGroups:t,type:s,dataTypes:r},o){return this.metaDb.adapter.writeWorkspaceServiceGroups({workspaceId:e,serviceGroups:t,type:s,dataTypes:r},o)}getRouterEndpoint(e,t,s,r){return this.storageUtils.getRouterEndpoint(e,t,s,r)}async addUpdateService({id:e,state:t,locked:s,assignedTo:o,modifiedOn:a,method:i,name:c,description:p,tags:l,references:d,testCases:u,vRules:m,delay:g,active:h,endpoint:f,request:v,responses:y,rules:k,triggers:w,pairings:b,validator:S},$,x){if(!(i||c||f)){const e=new Error("Invalid Request");throw e.code="ERR.INVALID.REQ",e.priority="ERROR",e}let E,_=a,I=f;0!==I.indexOf("/")&&(I=`/${I}`),_||(_=Date.now());const D=this.metaDb.get("services");let O;O=c||(f.startsWith("/")?`${i.toLowerCase()}${f.replace(/\//g,"_")}`:`${i.toLowerCase()}_${f.replace(/\//g,"_")}`);const C=await this.getServiceByEndpoint(I,i),R=D.find({id:e});if(C||R.length>0){let r={id:e,state:t,locked:s,assignedTo:o,testCases:u,method:i,name:O,description:p,endpoint:I,_endpoint:f,vRules:m,request:v,rules:k,triggers:w,pairings:b,delay:g,tags:l,references:d,_update:!0,validator:S,active:h,user:{name:$.name,email:$.email,id:$.id},modifiedOn:Date.now(),modifiedBy:$.name,modifiedEmail:$.email,createdBy:R.createdBy?R.createdBy:$.name};r=n.processServiceObject(r);const a=R.assign(r);await a.write(),E=r}else{_=Date.now();let e={state:t,locked:s,assignedTo:o,testCases:u,method:i,name:O,description:p,endpoint:I,vRules:m,request:v,responses:y,rules:k,triggers:w,pairings:b,delay:g,tags:l,references:d,validator:S,_update:!0,active:h,user:{name:$.name,email:$.email,id:$.id,username:$.username},modifiedOn:_,modifiedBy:$.name,modifiedEmail:$.email,createdBy:$.name};e.id=r("py_"),e=n.processServiceObject(e),e._endpoint=n.generateInternalEndpoint(e),await this.metaDb.get("services").push(e).write(),E=e}return E}async removeService(e,t){const s=this.metaDb.get("services");let r=s.find({id:e});const o=r.value();if(!o){const e=new Error("Service not found");throw e.code="USR.102",e}return await r.assign({id:e,_delete:!0,user:t}).write(),r=s.remove({id:e}),await r.write(),o}async getServices(e){if(e){return this.metaDb.get("services").find((t=>t.id===e&&!t._delete)).value()}const t=await this.metaDb.get("services").value();return t.forEach((e=>{e.name&&(e.name=e.name.replace(/__/g,"-").replace(/_/g," "))})),t}async getServiceByEndpoint(e,t,s){const r=e.substring(a.MOCK_ENDPOINT_PATH.length,e.length),o=this.metaDb.get("services");const i=(await o.find({endpoint:r,method:t})).value();if(i)i._endpoint=n.generateInternalEndpoint(i);else{const a=await o.value(),n=this.storageUtils.getMatchedService(a,e,t);if(n)return this.storageUtils.invalidMethodTypeMatch(n,e,t,s);const i=this.storageUtils.getMatchedServiceNonMethod(a,e,t,s);if(i&&"GET"===i.method)return this.getRouterEndpoint(i,r,s,t)}return i}async getUser(e){return this.metaDb.get("users").find({id:e}).value()}async addUpdateUser({id:e,username:t,token:s},r){const o=this.metaDb.get("users"),a=o.find({id:e});let n=a.value();return n?a.assign({id:e,username:t,token:s,user:r}).write():(n={id:e,username:t,token:s,user:r},await o.push(n).write()),n}}},2588:(e,t,s)=>{const r=s(4298),o=s(5027),a=s(4298),n=s(5622),i=s(1727),c=s(1257),p=s(2772),l=s(7944);function d(e){return n.resolve(__dirname,e)}class u{constructor(e){this.metaDir=`${global.appRoot}/workspaces/${e}`,o.info(`[Git Connector] User meta director:${this.metaDir}`),a.ensureDirSync(this.metaDir);const t={baseDir:this.metaDir,binary:"git",maxConcurrentProcesses:6};this.git=p(t)}static async checkConnectivity({url:e,name:t,token:s}){const r=u.getGitURL({url:e,name:t,token:s}),a=i.dirSync({unsafeCleanup:!0});o.debug(`[Git Connector]  check connectivity - ${a.name} remote- ${r}`);const n={baseDir:a.name,binary:"git",maxConcurrentProcesses:1},c=p(n);return new Promise((async(e,t)=>{try{const t=[],s=(await c.init().addRemote("origin",r).listRemote(["--heads","origin"])).split("\n").map((e=>e.split("\t")));for(let e=0;e<s.length;e+=1){const r=s[e];if(2===r.length){const e=r[1];t.push(e.split("/")[2])}}o.info("[Git Connector]  branchSummary -",t),a.removeCallback(),e(t)}catch(e){o.error(e),a.removeCallback(),t(e)}}))}static getGitURL({url:e,name:t,token:s}){let r;try{const a=gh(e);r=`${a.protocol}//${t}:${s}@${a.host}/${a.path}`,o.debug(r)}catch(e){o.error(e)}return r}async connectDatasource(e,t){try{if(e){o.debug(`[Git Connector]  connectorDifferences - ${t}`);let s=u.getGitURL(e);if(s){o.debug(this.metaDir),mkdirp.sync(this.metaDir);let a=!1;try{const e=await this.git.status();o.info(`[Git Connector]  checkIsRepo - ${e}`),a=!0,(e.conflicted.length>0||t)&&(r.emptyDirSync(d(this.metaDir)),a=!1)}catch(e){a=!1}s=u.getGitURL(e);const n=this.git;if(o.info(`[Git Connector]  checkIsRepo - ${a}`),o.info(`[Git Connector]  Connecting datasource ...${s}`),a){console.time("git.clean"),await n.fetch("origin",e.branch),await n.reset("hard"),console.timeEnd("git.clean"),console.time("Pull");try{const t=await n.pull("origin",e.branch,["--no-rebase","--allow-unrelated-histories"]);o.debug("[Git Connector]  pullsummary",t)}catch(t){e.offlineMode=!0,e.offlineMessage=t.message,o.error("[Git Connector]  Running on cached mode...",t)}console.timeEnd("Pull")}else{try{await n.init({"--initial-branch":e.branch}),await n.addRemote("origin",s)}catch(e){o.error(e)}console.time("[Git Connector] Clone"),r.emptyDirSync(d(this.metaDir));const t=["--depth","1","--single-branch","--branch",e.branch];await n.clone(s,".",t),console.timeEnd("[Git Connector] Clone")}o.info("[Git Connector]  DataSource connected.")}}else e.offlineMode=!0}catch(t){o.error(t);try{await r.removeSync(d(this.metaDir)),o.debug("[Git Connector]  removed meta dir",this.metaDir)}catch(e){o.error(e)}e.offlineMode=!0,e.offlineMessage=t.message,o.error("[Git Connector]  Error Connecting:",t),o.info("[Git Connector]  Running on cached mode...")}}async initStorage(e,t){const{connector:s}=e,r=new Promise((async(r,a)=>{try{if(o.info(`[Git Connector]  initStorage workspaceConfig.connector: ${e.connector}  ${t}`),e.connector){const a=u.getGitURL(s);o.info(`[Git Connector]  initStorage Remote info: ${a}`),console.time("connectDatasource"),await this.connectDatasource(s,t),console.timeEnd("connectDatasource"),console.time("[git timing] GitLowdbAdapter");const n=new l(this.metaDir,e);s.metaDb=c(n),console.timeEnd("[git timing] GitLowdbAdapter"),s.metaDb.adapter=n,o.info("[Git Connector]  initStorage App Initialized:"),r(e)}}catch(e){o.error(e),a(e)}}));return r}}e.exports=u},7944:(e,t,s)=>{const r=s(4298),o=s(4537),a=s(5622),n=s(5027),i=s(8038),c=s(6563);function p(e){return a.resolve(__dirname,e)}class l{constructor(e,t){n.info("[Git Adapter] constructor"),this.workspaceDir=`${e}/py_mocks`,this.userDataDir=`${this.workspaceDir}/py_data`,this.pairingsDir=`${this.workspaceDir}/py_pairings`,this.serviceDir=`${this.workspaceDir}/.py_services`,this.workspaceFile=`${this.workspaceDir}/.workspace`,this.serviceGroupsFile=`${this.workspaceDir}/.py_service_groups`,this.dataTypesFile=`${this.workspaceDir}/.py_dataTypes`,r.ensureDirSync(p(this.workspaceDir)),r.ensureDirSync(p(this.serviceDir)),r.ensureDirSync(p(this.pairingsDir)),r.ensureDirSync(p(this.userDataDir)),this.connector=t.connector,this.mockServer=t.mockServer}read(){const e={services:[],users:[]};try{r.ensureDirSync(p(this.serviceDir));const t=l.findFiles(p(this.serviceDir));if(t){for(let s=0;s<t.length;s+=1){const r=t[s],o=l.readFile(p(`${this.serviceDir}/${r}`),"utf-8");if(o){const t=JSON.parse(o);if(t.method&&t.endpoint&&!t._delete)this.readUserMockData(t,(t=>{e.services.push(t)}));else try{l.deleteFile(p(`${this.serviceDir}/${r}`)),n.log(`clean up: ${this.serviceDir}/${r}`)}catch(e){n.error(e)}}}this.mockServer.started=!0}}catch(e){throw e instanceof SyntaxError&&(e.message=`Malformed JSON in file: ${this.serviceDir} ${this.pairingsDir}\n${e.message}`),e}return e}async write(e){try{r.ensureDirSync(p(this.pairingsDir));let t=`${this.pairingsDir}/${e.id}.json`;if(e.services)for(let s=0;s<e.services.length;s+=1){const r=e.services[s];if(r.user&&r.id){const e=r.user.name,s=r.user.email;if(delete r.user,t=`${this.serviceDir}/${r.id}.json`,this.writeUserMockData(r),r._delete)r._delete&&(n.info(`[Git Adapter] Deleting service: ${r.id}, ${e} ${t}`),this.connector.offlineMode?(await l.deleteFile(p(t)),n.info(`[Git Adapter] Deleted locally file: ${r.id}`),this.commit(this.connector,r,!0,`services delete:${r.id} - ${e}`,{name:e,email:s})):await this.commitAndPush(this.connector,r,!0,`services delete:${r.id} - ${e}`,{name:e,email:s}));else{if(n.info(`[Git Adapter]Updating service: ${r.id}, ${e}`),l.writeFile(p(t),o(r,null,2)),r.pairings&&r.pairings.static&&r.pairings.static.samples&&r.pairings.static.samples.length>0&&i.savePair(this.pairingsDir,r),this.connector.offlineMode){this.commit(this.connector,r,!1,`services update:${r.id} -${e}`,{name:e,email:s}),n.info(`[Git Adapter][Offline] Updated local file: ${r.id}`);const t=new Error("Offline: Changes saved locally but not synced.");throw t.code="ERR.OFF",t.priority="INFO",t}await this.commitAndPush(this.connector,r,!1,`services update:${r.id} -${e}`,{name:e,email:s})}break}}}catch(e){if(e.code)throw new{message:e.message,code:e.code,priority:e.priority};throw n.error(e),n.error(`error writing data into memory: ${e}`),new Error(e)}}async readUserMockData(e,t){if(e&&e.rules)for(let t=0;t<e.rules.length;t+=1){const s=e.rules[t],{responses:o}=s;if(o&&o.userDataPath)try{r.ensureDirSync(p(this.userDataDir));const e=l.readFile(p(`${this.userDataDir}/${o.userDataPath}`),"utf-8"),t=JSON.parse(e);t&&(o.body=t)}catch(e){n.error("json parse error",e),o.body={}}}t(e)}async writeUserMockData(e){if(e&&e.rules)for(let t=0;t<e.rules.length;t+=1){const s=e.rules[t],{responses:r}=s;if(r){let a=s.name.toLowerCase();a=a.replace(/-/g,"__").replace(/ /g,"_");const n=`${e.name}_case_${t+1}.json`;r.userDataPath&&r.userDataPath!==n&&await l.deleteFile(p(`${this.userDataDir}/${s.userDataPath}`)),r.userDataPath=n,r.body&&l.writeFile(p(`${this.userDataDir}/${r.userDataPath}`),o(r.body,null,2))}}}async writeWorkspaceServiceGroups({workspaceId:e,serviceGroups:t,type:s,dataTypes:a},i){if(e&&i){let c;n.debug(e,i);for(let t=0;t<i.workspaces.length;t+=1)if(e===i.workspaces[t].workspaceId){c=i.workspaces[t];break}let d,u="";"serviceGroups"===s?(u=this.serviceGroupsFile,d=t):"dataTypes"===s&&(u=this.dataTypesFile,d=a),r.ensureFileSync(p(u)),c&&d&&l.writeFile(p(`${u}`),o(d,null,2))}}async readWorkspaceServiceGroups({type:e}){let t="";"serviceGroups"===e?t=this.serviceGroupsFile:"dataTypes"===e&&(t=this.dataTypesFile),r.ensureFileSync(p(t));let s=l.readFile(p(`${t}`),"utf-8");return"serviceGroups"===e&&(s=c.processServiceGroups(s)),s}async writeWorkspaceConnectorData({workspaceId:e},t){if(e&&t){let s;n.debug(e,t);for(let r=0;r<t.workspaces.length;r+=1)if(e===t.workspaces[r].workspaceId){s=t.workspaces[r];break}r.ensureFileSync(p(this.workspaceFile)),s&&s.owner&&l.writeFile(p(`${this.workspaceFile}`),o(s.workspaceUsers,null,2))}}async readWorkspaceConnectorData(){r.ensureFileSync(p(this.workspaceFile));return l.readFile(p(`${this.workspaceFile}`),"utf-8")}async pull(){const e=this.connector.datasource.git;try{await e.pull(c.getGitURL(this.connector),this.connector.branch,["--no-rebase","--allow-unrelated-histories"])}catch(t){try{await e.clean("f"),await e.fetch("origin",this.connector.branch),await e.reset("hard"),await e.merge(["-s","recursive","-X","theirs"]),await e.pull(c.getGitURL(this.connector),this.connector.branch,["--no-rebase","--allow-unrelated-histories"])}catch(e){throw new Error(e.message)}}}async commitAndPush(e,t,s,r,{name:o,email:a}){const i=e.datasource.git;return new Promise((async(c,p)=>{try{const l=await e.metaDb.adapter.pull();n.debug(l);try{if(n.info(`[Git Adapter] commitAndPush - ${o} <${a}> - isDelete ${s}`),s){try{await i.rm([`${this.serviceDir}/${t.id}.json`]),await i.rm([`${this.userDataDir}/${t.name}*.json`])}catch(e){}i.commit(r,null,{"--author":`${o} <${a}>`}).then((()=>{i.push("origin",e.branch).then((()=>c({ok:!0}))).catch((e=>(n.error(e),p(e))))})).catch((e=>(n.error(e),p(e))))}else i.add(`${this.workspaceDir}/*`).commit(r,null,{"--author":`${o} <${a}>`}),this.read(),c({ok:!0}),i.push("origin",e.branch).then((()=>{})).catch((e=>{n.error(e)}))}catch(e){return n.error(e),p(e)}}catch(e){if(e)return n.error(e),p(e)}}))}async commit(e,t,s,r,{name:o,email:a}){const i=e.datasource.git,c=e.metaDb.adapter;return new Promise((async(e,p)=>{c.pull().then((async()=>{try{if(n.info(`[Git Adapter] commitAndPush - ${o} <${a}> - isDelete ${s}`),s){try{await i.rm([`${this.serviceDir}/${t.id}.json`]),await i.rm([`${this.userDataDir}/${t.name}*.json`])}catch(e){}i.commit(r,null,{"--author":`${o} <${a}>`}).then((()=>{})).catch((e=>(n.error(e),p(e))))}else i.add(`${this.workspaceDir}/*`).commit(r,null,{"--author":`${o} <${a}>`}).then((()=>e({ok:!0}))).catch((e=>(n.error(e),p(e))))}catch(e){return n.error(e.stack()),n.error(e),p(e)}})).catch((e=>e?(n.error(e),p(e)):p(new Error("merge conflict"))))}))}static readFile(e){return r.readFileSync(e)}static async deleteFile(e){await r.removeSync(e)}static writeFile(e,t){r.outputFileSync(e,t)}static findFiles(e){return r.readdirSync(e).filter((t=>!r.statSync(a.join(e,t)).isDirectory()))}}e.exports=l},8522:(e,t,s)=>{const r=s(227),o=(s(5027),s(2588)),a=s(4625)(),n=s(1574)(),i=s(6563),{servicesFromSwagger:c}=s(6563);e.exports=class extends a{static orderByDate(e,t){return e.slice().sort(((e,s)=>e[t]>s[t]?-1:1))}constructor(e){super(),this.metaDb&&this.metaDb.connection&&this.metaDb.connection.close(),this.connector=e.connector,this.workspaceConfig=e,this.metaDb=this.connector.metaDb,this.storageUtils=s(2168)(e.mockServer)}setMockServer(e){this.metaDb.adapter.mockServer=e}reInitStorage(){this.connector.recheck=!0}async reconnect(){await this.connector.datasource.connectDatasource(this.workspaceConfig)}async forceRead(){return await this.metaDb.adapter.pull(),await this.metaDb.read(),!0}readWorkspaceConnectorData(){return this.metaDb.adapter.readWorkspaceConnectorData()}writeWorkspaceConnectorData(e,t){return this.metaDb.adapter.writeWorkspaceConnectorData(e,t)}readWorkspaceServiceGroups(e){return this.metaDb.adapter.readWorkspaceServiceGroups(e)}writeWorkspaceServiceGroups(e,t){return this.metaDb.adapter.writeWorkspaceServiceGroups(e,t)}async checkConnectivity(){return o.checkConnectivity(this.connector)}getRouterEndpoint(e,t,s,r){return this.storageUtils.getRouterEndpoint(e,t,s,r)}async addUpdateService({id:e,state:t,locked:s,assignedTo:o,testCases:a,modifiedOn:n,method:c,name:p,description:l,tags:d,references:u,vRules:m,delay:g,active:h,endpoint:f,request:v,responses:y,rules:k,triggers:w,pairings:b,validator:S},$,x){if(!(c||p||f)){const e=new Error("Invalid Request");throw e.code="ERR.INVALID.REQ",e.priority="ERROR",e}let E,_=n,I=f;0!==I.indexOf("/")&&(I=`/${I}`),_||(_=Date.now());const D=this.metaDb.get("services"),O=D.find({id:e}),C=O.value();let R;if(R=p||(f.startsWith("/")?`${c.toLowerCase()}${f.replace(/\//g,"_")}`:`${c.toLowerCase()}_${f.replace(/\//g,"_")}`),C){const e=(await D.find({endpoint:I,method:c})).value(),r=i.generateInternalEndpoint(C);_=Date.now();let n={state:t,locked:s,assignedTo:o,testCases:a,method:c,name:R,description:l,endpoint:I,_endpoint:r,vRules:m,request:v,responses:y,rules:k,triggers:w,pairings:b,delay:g,tags:d,references:u,_update:!0,validator:S,active:h,user:$,modifiedOn:_,modifiedBy:$.name,modifiedEmail:$.email,createdBy:e&&e.createdBy?e.createdBy:$.name};n=i.processServiceObject(n);const p=O.assign(n);await p.write(),E=C}else{const e=await this.getServiceByEndpoint(I,c);if(e&&!x){const t=new Error(`Service already exists with same endpoint ${e.endpoint} and method`);throw t.code="USR.101",t.priority="WARN",t}{_=Date.now();let e={state:t,locked:s,assignedTo:o,testCases:a,method:c,name:R,description:l,endpoint:I,vRules:m,request:v,responses:y,rules:k,triggers:w,pairings:b,delay:g,tags:d,references:u,validator:S,_update:!0,active:h,user:$,modifiedOn:n,modifiedBy:$.name,modifiedEmail:$.email,createdBy:$.name};e=i.processServiceObject(e),e.id=r("py_"),e._endpoint=i.generateInternalEndpoint(e),await this.metaDb.get("services").push(e).write(),E=e}}return E}async removeService(e,t){const s=this.metaDb.get("services");let r=s.find({id:e});const o=r.value();if(!o){const e=new Error("Service not found");throw e.code="USR.102",e}return await r.assign({id:e,_delete:!0,user:t}).write(),r=s.remove({id:e}),await r.write(),o}async getServices(e){if(e){const t=this.metaDb.get("services").find({id:e}).value();return t&&t.name&&(t.name=t.name.replace(/__/g,"-").replace(/_/g," ")),t}const t=await this.metaDb.get("services").value();return t.forEach((e=>{e.name&&(e.name=e.name.replace(/__/g,"-").replace(/_/g," "))})),t}async getServiceByEndpoint(e,t,s){const r=e.substring(n.MOCK_ENDPOINT_PATH.length,e.length),o=this.metaDb.get("services");let a=await o.find({endpoint:r,method:t});const c=a.value();if(!c){const n=await o.value(),i=this.storageUtils.getMatchedService(n,e,t);if(i)return this.storageUtils.invalidMethodTypeMatch(i,e,t,s);const p=await o.value();return a=this.storageUtils.getMatchedServiceNonMethod(p,e,t,s),a&&"GET"===a.method?this.getRouterEndpoint(a,r,s,t):c}const p=JSON.parse(JSON.stringify(c));return p._endpoint=i.generateInternalEndpoint(c),p}async getUser(e){return this.metaDb.get("users").find({id:e}).value()}async addUpdateUser({id:e,username:t,token:s},r){const o=this.metaDb.get("users"),a=o.find({id:e});let n=a.value();return n?a.assign({id:e,username:t,token:s,user:r}).write():(n={id:e,username:t,token:s,user:r},await o.push(n).write()),n}}},3329:(e,t,s)=>{const r=s(5027);e.exports=class{static async checkConnectivity(e){return new Promise(((t,o)=>{try{const a=`mongodb://${e.host}:${e.port}/${e.database}`;r.debug(`[Mongo Connector] to - ${a}`);const n=s(5619),i={autoIndex:!1,reconnectTries:Number.MIN_VALUE,reconnectInterval:500,poolSize:1,bufferMaxEntries:0,connectTimeoutMS:100,socketTimeoutMS:450,useNewUrlParser:!0};n.createConnection(a,i).then((()=>{r.debug(`connected to - ${a}`),t(e)}),(e=>{r.error(e),o(e)}))}catch(e){o(e)}}))}async initStorage(e,t){return new Promise((async(t,o)=>{const{connector:a}=e;try{const o=`mongodb://${a.host}:${a.port}/${a.database}`,n=s(5619),i={autoIndex:!1,poolSize:10,bufferMaxEntries:0,connectTimeoutMS:1e3,socketTimeoutMS:45e3,useNewUrlParser:!0,useUnifiedTopology:!0},c=await n.connect(o,i);r.debug(`Connected to - ${a.host}:${a.port}`),a.metaDb=c,a.offline=!1,t(e)}catch(s){r.error("[Mongo Connector]: ",s),r.info("[Mongo Connector] Running on cached mode..."),a.metaDb=null,a.offline=!0,t(e)}}))}}},4092:(e,t,s)=>{const r=s(227),o=s(5619),a=s(3572),n=s(3150),i=s(8441),c=s(2554),p=s(4625)(),l=s(1574)(),d=s(6563),u=s(5027);class m extends p{constructor(e){super(),this.metaDb&&this.metaDb.connection&&this.metaDb.connection.close(),this.connector=e.connector,this.workspaceConfig=e,this.metaDb=this.connector.metaDb,this.serviceModel=o.models.Service||o.model("Service",new o.Schema(n)),this.serviceGroupsModel=o.models.ServiceGroups||o.model("ServiceGroups",new o.Schema(i)),this.dataTypesModel=o.models.DataTypes||o.model("DataTypes",new o.Schema(c)),this.setMockServer(e.mockServer)}setMockServer(e){this.mockServer=e,this.storageUtils=s(2168)(this.mockServer)}reInitStorage(){this.connector.recheck=!0}reconnect(){this.connector.recheck=!0}async forceRead(){return!0}async checkConnectivity(){return!0}getRouterEndpoint(e,t,s,r){return this.storageUtils.getRouterEndpoint(e,t,s,r)}async readWorkspaceServiceGroups({workspaceId:e,type:t},s){if("serviceGroups"===t){const t=await this.serviceGroupsModel.findOne({workspaceId:e,userId:s.id});if(t)return t.serviceGroups=d.processServiceGroups(t.serviceGroups),t.serviceGroups}else if("dataTypes"===t){const t=await this.dataTypesModel.findOne({workspaceId:e,userId:s.id});if(t){const e=t.toJSON().dataTypes;return e.forEach((e=>{e.schema=JSON.parse(e.schema),e.example=JSON.parse(e.example)})),e}}return null}async writeWorkspaceServiceGroups({workspaceId:e,serviceGroups:t,type:s,dataTypes:r},o){try{let n;if("serviceGroups"===s){const s=await this.serviceGroupsModel.findOne({workspaceId:e,userId:o.id});s?(Object.assign(s,a.escape({workspaceId:e,serviceGroups:t,userId:o.id})),n=new this.serviceGroupsModel(s)):n=new this.serviceGroupsModel({workspaceId:e,serviceGroups:t,userId:o.id})}else if("dataTypes"===s){const s=await this.dataTypesModel.findOne({workspaceId:e,userId:o.id});r.forEach((e=>{e.schema=JSON.stringify(e.schema),e.example=JSON.stringify(e.example)})),s?(Object.assign(s,a.escape({workspaceId:e,dataTypes:r,userId:o.id})),n=new this.dataTypesModel(s),await this.dataTypesModel.findOneAndUpdate({_id:s._id},n,{upsert:!1}),t=n.toJSON()):(n=new this.dataTypesModel({workspaceId:e,dataTypes:r,userId:o.id}),await n.save(),t=n.toJSON())}}catch(e){u.error(e)}return t}async addUpdateService({id:e,state:t,locked:s,assignedTo:o,modifiedOn:n,testCases:i,method:c,name:p,description:l,group:m,vRules:g,delay:h,active:f,endpoint:v,request:y,rules:k,triggers:w,pairings:b,tags:S,references:$,validator:x},E,_){if(!(c||p||v))throw new Error("Missing method, name, endpoint");let I,D;0!==v.indexOf("/")&&(v=`/${v}`),n||(n=Date.now());try{e&&(I=await this.serviceModel.findOne({id:e}),I=I.toJSON())}catch(e){u.error(e)}if(D=p||(v.startsWith("/")?`${c.toLowerCase()}${v.replace(/\//g,"_")}`:`${c.toLowerCase()}_${v.replace(/\//g,"_")}`),I){const r=await this.serviceModel.findOne({endpoint:v,method:c});if(r&&r.id!==I.id)throw new Error(`Service already exists with same endpoint  ${r.endpoint} and method`);const p=d.generateInternalEndpoint(I);try{return n=Date.now(),Object.assign(I,a.escape({id:e,method:c,name:D,description:l,endpoint:v,group:m,_endpoint:p,vRules:g,testCases:i,request:y,rules:k,triggers:w,pairings:b,delay:h,tags:S,references:$,state:t,validator:x,locked:s,assignedTo:o,active:f,user:E,modifiedOn:n,modifiedBy:E.name,modifiedEmail:E.email,createdBy:I&&I.createdBy?I.createdBy:E.name},!0)),I=d.processServiceObject(I),await this.serviceModel.findOneAndUpdate({_id:I._id},I,{upsert:!1}),I}catch(e){u.error(e)}}else{const p=await this.getServiceByEndpoint(v,c);if(p&&!_){const r=await this.serviceModel.findOne({id:p.id});if(r){n=Date.now();let _=a.escape({id:e,state:t,locked:s,assignedTo:o,testCases:i,method:c,name:D,description:l,endpoint:v,group:m,vRules:g,request:y,rules:k,triggers:w,pairings:b,delay:h,tags:S,references:$,validator:x,active:f,user:E,modifiedOn:n,modifiedBy:E.name,modifiedEmail:E.email,createdBy:E.name},!0);_.tags=S,_.id=p.id,_=d.processServiceObject(_),_._endpoint=d.generateInternalEndpoint(p),Object.assign(r,_);try{const e=new this.serviceModel(r);return await e.save(),a.unescape(r.toJSON(),!0)}catch(e){u.error(e)}}}else{n=Date.now();let e=a.escape({state:t,locked:s,assignedTo:o,testCases:i,method:c,name:D,description:l,endpoint:v,group:m,vRules:g,request:y,rules:k,triggers:w,pairings:b,delay:h,tags:S,references:$,active:f,user:E,modifiedOn:n,modifiedBy:E.name,modifiedEmail:E.email,createdBy:E.name},!0);e.tags=S,e.id=r("py_"),e=d.processServiceObject(e),e._endpoint=d.generateInternalEndpoint(e);try{const t=new this.serviceModel(e);return await t.save(),a.unescape(t.toJSON(),!0)}catch(e){u.error(e)}}}return I}async removeService(e,t){try{return await this.serviceModel.findOneAndRemove({id:e})}catch(e){u.error(e)}}async getServices(e){if(e){const t=await this.serviceModel.findOne({id:e});return t&&t.name&&(t.name=t.name.replace(/__/g,"-").replace(/_/g," ")),t}const t=await this.serviceModel.find();return t.forEach((e=>{e.name&&(e.name=e.name.replace(/__/g,"-").replace(/_/g," "))})),t}async getServiceByEndpoint(e,t,s){const r=e.substring(l.MOCK_ENDPOINT_PATH.length,e.length),o=await this.serviceModel.findOne({endpoint:e,method:t});if(!o){const o=await this.serviceModel.find(),a=this.storageUtils.getMatchedService(o,e,t);if(a)return this.storageUtils.invalidMethodTypeMatch(a,e,t,s);const n=await this.serviceModel.find(),i=this.storageUtils.getMatchedServiceNonMethod(n,e,t,s);return i&&"GET"===i.method?this.storageUtils.getRouterEndpoint(i,r,s,t):i}const a=JSON.parse(JSON.stringify(o));return a._endpoint=d.generateInternalEndpoint(o),a}async getUser(e){return metaDb.get("users").find({id:e}).value()}async addUpdateUser({id:e,username:t,token:s},r){const o=metaDb.get("users"),a=o.find({id:e});let n=a.value();return n?a.assign({id:e,username:t,token:s,user:r}).write():(n={id:e,username:t,token:s,user:r},await o.push(n).write()),n}}e.exports=e=>new m(e)},2168:(e,t,s)=>{e.exports=e=>{const t=e.server,r=s(6563),o=s(1574)();return{getRouterEndpoint(e,s,a,n){const i=s.substring(o.MOCK_ENDPOINT_PATH.length,s.length);if(e&&e.active&&e.endpoint===i&&e.method===n)return e;let c;if(e){const s=n.toLowerCase(),p=`${o.MOCK_ENDPOINT_PATH}/${e.id}/${s}${i}`,l=r.matchRoute(t,p);if(l){const t=l.regexp.exec(p),s=p.substring(t[0].length+1,p.length);if(c=JSON.parse(JSON.stringify(e)),c._endpoint=`${r.generateInternalEndpoint(e)}/${s}`,a){a.locals.ruleParams={},s&&(a.locals.ruleParams.id=s);let e=1;l.keys.forEach((s=>{a.locals.ruleParams[s.name]=t[e],e+=1}))}}}return c},getMatchedService(e,t,s){const r=[];for(let o=0;o<e.length;o+=1){const a=e[o];this.isServiceMatchedEndpoint(a,t,s)&&r.push(a)}let o,a=-1;for(let e=0;e<r.length;e+=1){const t=r[e],s=t.endpoint.split("/").length;s>a&&(o=t,a=s)}return o},getMatchedServiceNonMethod(e,t,s,r){const o=[];for(let a=0;a<e.length;a+=1){const n=e[a],i=n.active&&n.endpoint===t&&n.method===s;if(i){o.push(n);break}if(!i&&n.active&&n.endpoint){const e=this.getRouterEndpoint(n,t,r,s);void 0!==e&&o.push(e)}}let a,n=-1;for(let e=0;e<o.length;e+=1){const t=o[e],s=t.endpoint.split("/").length;s>n&&(a=t,n=s)}return a},isServiceMatchedEndpoint(e,t,s){const r=t.substring(o.MOCK_ENDPOINT_PATH.length,t.length);let a=e.endpoint===r&&e.method===s;if(!a&&-1!==e.endpoint.indexOf("/:")&&e.method===s){const s=[];let o="";const n=e.endpoint.split("/"),i=t.split("/");if(n.length===i.length){for(let e=0;e<n.length;e+=1){const t=n[e];t.length>0&&(-1===t.indexOf(":")?o+=`/${t}`:(s.push(o),o=""),e+1===n.length&&s.push(o))}for(const e of s)if(e.length>0){if(!r.includes(e)){a=!1;break}a=!0}}}return a},invalidMethodTypeMatch(e,s,a,n){const i=s.substring(o.MOCK_ENDPOINT_PATH.length,s.length),c=JSON.parse(JSON.stringify(e)),p=a.toLowerCase(),l=`${o.MOCK_ENDPOINT_PATH}/${c.id}/${p}${i}`,d=r.matchRoute(t,l);if(d){const e=d.regexp.exec(l);c._endpoint||(c._endpoint=r.generateInternalEndpoint(c));let t=1;d.keys.forEach((s=>{c._endpoint=c._endpoint.replace(new RegExp(`/:${s.name}`,"g"),`/${e[t]}`),n&&(n.locals.ruleParams||(n.locals.ruleParams={}),n.locals.ruleParams[s.name]=e[t]),t+=1}));const s=l.substring(e[0].length+1,l.length);return s&&(c._endpoint=`${c._endpoint}/${s}`,n&&(n.locals.ruleParams={},s&&(n.locals.ruleParams.id=s))),c}},idMismatchCheck(e,s,a,n){const i=s.substring(o.MOCK_ENDPOINT_PATH.length,s.length),c=JSON.parse(JSON.stringify(e)),p=a.toLowerCase(),l=`${o.MOCK_ENDPOINT_PATH}/${c.id}/${p}${i}`,d=r.matchRoute(t,l);if(d){const e=d.regexp.exec(l);let t=1;d.keys.forEach((s=>{c._endpoint=c._endpoint.replace(new RegExp(`/:${s.name}`,"g"),`/${e[t]}`),t+=1}));const s=l.substring(e[0].length+1,l.length);return s&&(c._endpoint=`${c._endpoint}/${s}`,n&&(n.locals.ruleParams={},s&&(n.locals.ruleParams.id=s))),c}}}}},4625:e=>{class t{constructor(){}reInitStorage(){}reconnect(){}async forceRead(){}async checkConnectivity(){}getRouterEndpoint(e,t,s,r){}async addUpdateService({id:e,modifiedOn:t,method:s,name:r,description:o,group:a,vRules:n,delay:i,active:c,endpoint:p,request:l,responses:d,rules:u,triggers:m,pairings:g},h,f){}async removeService(e,t){}async getServices(e){}async getServiceByEndpoint(e,t,s){}async getUser(e){}async addUpdateUser({id:e,username:t,token:s},r){}}e.exports=()=>t},4766:e=>{"use strict";e.exports=require("@apidevtools/swagger-parser")},2927:e=>{"use strict";e.exports=require("app-root-path")},2376:e=>{"use strict";e.exports=require("axios")},2473:e=>{"use strict";e.exports=require("body-parser")},3434:e=>{"use strict";e.exports=require("chance")},4995:e=>{"use strict";e.exports=require("compression")},6657:e=>{"use strict";e.exports=require("connect-pause")},358:e=>{"use strict";e.exports=require("cookie-parser")},479:e=>{"use strict";e.exports=require("cors")},419:e=>{"use strict";e.exports=require("crypto-js")},1285:e=>{"use strict";e.exports=require("deep-diff")},334:e=>{"use strict";e.exports=require("dotenv")},5027:e=>{"use strict";e.exports=require("electron-log")},3400:e=>{"use strict";e.exports=require("errorhandler")},2127:e=>{"use strict";e.exports=require("express")},8351:e=>{"use strict";e.exports=require("express-mung")},7472:e=>{"use strict";e.exports=require("express-rate-limit")},54:e=>{"use strict";e.exports=require("express-static-gzip")},1057:e=>{"use strict";e.exports=require("express-urlrewrite")},8898:e=>{"use strict";e.exports=require("faker")},6535:e=>{"use strict";e.exports=require("flat-cache")},5047:e=>{"use strict";e.exports=require("flatted")},5747:e=>{"use strict";e.exports=require("fs")},4298:e=>{"use strict";e.exports=require("fs-extra")},3242:e=>{"use strict";e.exports=require("full-text-search-light")},5698:e=>{"use strict";e.exports=require("git-url-parse")},3498:e=>{"use strict";e.exports=require("hide-powered-by")},3098:e=>{"use strict";e.exports=require("home-or-tmp")},504:e=>{"use strict";e.exports=require("hosts-so-easy")},8605:e=>{"use strict";e.exports=require("http")},7211:e=>{"use strict";e.exports=require("https")},2979:e=>{"use strict";e.exports=require("json-rules-engine")},7551:e=>{"use strict";e.exports=require("json-schema-faker")},8118:e=>{"use strict";e.exports=require("json-schema-generator")},2804:e=>{"use strict";e.exports=require("json-server")},4537:e=>{"use strict";e.exports=require("json-stringify-safe")},3286:e=>{"use strict";e.exports=require("json-to-pretty-yaml")},5712:e=>{"use strict";e.exports=require("jsonfile")},1888:e=>{"use strict";e.exports=require("jsonschema")},9722:e=>{"use strict";e.exports=require("jsonwebtoken")},1764:e=>{"use strict";e.exports=require("killable")},3804:e=>{"use strict";e.exports=require("lodash")},8076:e=>{"use strict";e.exports=require("lodash-id")},7415:e=>{"use strict";e.exports=require("lodash.pick")},1257:e=>{"use strict";e.exports=require("lowdb")},6035:e=>{"use strict";e.exports=require("lowdb/adapters/FileSync")},8897:e=>{"use strict";e.exports=require("lowdb/adapters/Memory")},9191:e=>{"use strict";e.exports=require("match-json")},4524:e=>{"use strict";e.exports=require("method-override")},3572:e=>{"use strict";e.exports=require("mongo-escape")},5619:e=>{"use strict";e.exports=require("mongoose")},8150:e=>{"use strict";e.exports=require("morgan")},8633:e=>{"use strict";e.exports=require("multer")},324:e=>{"use strict";e.exports=require("nanoid")},1631:e=>{"use strict";e.exports=require("net")},2087:e=>{"use strict";e.exports=require("os")},7391:e=>{"use strict";e.exports=require("parse-github-url")},7436:e=>{"use strict";e.exports=require("parse-url")},5622:e=>{"use strict";e.exports=require("path")},6329:e=>{"use strict";e.exports=require("pluralize")},1084:e=>{"use strict";e.exports=require("qewd-transform-json")},2772:e=>{"use strict";e.exports=require("simple-git")},6710:e=>{"use strict";e.exports=require("sudo-prompt")},1727:e=>{"use strict";e.exports=require("tmp")},227:e=>{"use strict";e.exports=require("uniqid")},8835:e=>{"use strict";e.exports=require("url")},1231:e=>{"use strict";e.exports=require("uuid")}},t={};(function s(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,s),a.exports})(4925)})();